{
  "{\"sourceRoot\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"filename\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _expressHandlebars = _interopRequireDefault(require(\"express-handlebars\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _expressSession = _interopRequireDefault(require(\"express-session\"));\n\nvar _dbconfig = require(\"./config/dbconfig\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// import Sequelize from 'sequelize';\n// import flash from 'connect-flash';\n// import request from 'request';\n// Initilizations\nvar app = (0, _express[\"default\"])(); // Database Connections\n\n// Test DataBase\n_dbconfig.sequelize.authenticate().then(function (err) {\n  console.log('Connection has been established successfully.');\n})[\"catch\"](function (err) {\n  console.log('Unable to connect to the database:', err);\n}); // Setings\n\n\napp.set('port', process.env.PORT || 3000);\napp.set('views', _path[\"default\"].join(__dirname, './views'));\napp.engine('.hbs', (0, _expressHandlebars[\"default\"])({\n  defaultLayout: 'main',\n  layoutDir: _path[\"default\"].join(app.get('views'), 'layouts'),\n  partialsDir: _path[\"default\"].join(app.get('views'), 'partials'),\n  extname: '.hbs'\n}));\napp.set('view engine', '.hbs'); // middleware\n\napp.use(_express[\"default\"].urlencoded({\n  extended: false\n})); // app.use(morgan('dev'));\n\napp.use((0, _expressSession[\"default\"])({\n  secret: 'mysecret27',\n  resave: true,\n  saveUninitialized: true\n})); // app.use(flash());\n// routes\n\napp.use(require('./routes/form')); // Static Files\n\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, './assets'))); // Global Variables\n// app.use((req,res,next)=> {\n//     res.locals.success_msg = req.flash('success_msg');\n//     res.locals.error_msg = req.flash('error_msg');\n//     res.locals.error = req.flash('error');\n//     res.locals.user = req.user || null;\n//     next();\n// });\n// Server is listenning\n\napp.listen(app.get('port'), function () {\n  console.log('Server on port', app.get('port'));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInNlcXVlbGl6ZSIsImF1dGhlbnRpY2F0ZSIsInRoZW4iLCJlcnIiLCJjb25zb2xlIiwibG9nIiwic2V0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsImVuZ2luZSIsImRlZmF1bHRMYXlvdXQiLCJsYXlvdXREaXIiLCJnZXQiLCJwYXJ0aWFsc0RpciIsImV4dG5hbWUiLCJ1c2UiLCJleHByZXNzIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwic2VjcmV0IiwicmVzYXZlIiwic2F2ZVVuaW5pdGlhbGl6ZWQiLCJyZXF1aXJlIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUdBOztBQVNBOzs7O0FBWEE7QUFDQTtBQUVBO0FBSUE7QUFDQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVosQyxDQUVBOztBQUVBO0FBQ0NDLG9CQUFVQyxZQUFWLEdBQ0VDLElBREYsQ0FDTyxVQUFTQyxHQUFULEVBQWM7QUFDbEJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLCtDQUFaO0FBQ0QsQ0FIRixXQUlRLFVBQVVGLEdBQVYsRUFBZTtBQUNwQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksb0NBQVosRUFBa0RGLEdBQWxEO0FBQ0QsQ0FORixFLENBT0Q7OztBQUNBSixHQUFHLENBQUNPLEdBQUosQ0FBUSxNQUFSLEVBQWdCQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFwQztBQUNBVixHQUFHLENBQUNPLEdBQUosQ0FBUSxPQUFSLEVBQWlCSSxpQkFBS0MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFNBQXJCLENBQWpCO0FBQ0FiLEdBQUcsQ0FBQ2MsTUFBSixDQUFXLE1BQVgsRUFBbUIsbUNBQU87QUFDdEJDLEVBQUFBLGFBQWEsRUFBRSxNQURPO0FBRXRCQyxFQUFBQSxTQUFTLEVBQUVMLGlCQUFLQyxJQUFMLENBQVVaLEdBQUcsQ0FBQ2lCLEdBQUosQ0FBUSxPQUFSLENBQVYsRUFBNEIsU0FBNUIsQ0FGVztBQUd0QkMsRUFBQUEsV0FBVyxFQUFFUCxpQkFBS0MsSUFBTCxDQUFVWixHQUFHLENBQUNpQixHQUFKLENBQVEsT0FBUixDQUFWLEVBQTRCLFVBQTVCLENBSFM7QUFJdEJFLEVBQUFBLE9BQU8sRUFBRTtBQUphLENBQVAsQ0FBbkI7QUFNQW5CLEdBQUcsQ0FBQ08sR0FBSixDQUFRLGFBQVIsRUFBdUIsTUFBdkIsRSxDQUVBOztBQUNBUCxHQUFHLENBQUNvQixHQUFKLENBQVFDLG9CQUFRQyxVQUFSLENBQW1CO0FBQUNDLEVBQUFBLFFBQVEsRUFBRTtBQUFYLENBQW5CLENBQVIsRSxDQUNBOztBQUNBdkIsR0FBRyxDQUFDb0IsR0FBSixDQUFRLGdDQUFRO0FBQ2RJLEVBQUFBLE1BQU0sRUFBRSxZQURNO0FBRWRDLEVBQUFBLE1BQU0sRUFBRSxJQUZNO0FBR2RDLEVBQUFBLGlCQUFpQixFQUFFO0FBSEwsQ0FBUixDQUFSLEUsQ0FLQTtBQUdBOztBQUNBMUIsR0FBRyxDQUFDb0IsR0FBSixDQUFRTyxPQUFPLENBQUMsZUFBRCxDQUFmLEUsQ0FFQTs7QUFDQTNCLEdBQUcsQ0FBQ29CLEdBQUosQ0FBUUMsOEJBQWVWLGlCQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsVUFBckIsQ0FBZixDQUFSLEUsQ0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0FiLEdBQUcsQ0FBQzRCLE1BQUosQ0FBVzVCLEdBQUcsQ0FBQ2lCLEdBQUosQ0FBUSxNQUFSLENBQVgsRUFBNEIsWUFBTTtBQUM5QlosRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVosRUFBOEJOLEdBQUcsQ0FBQ2lCLEdBQUosQ0FBUSxNQUFSLENBQTlCO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHNpbGVudC1zbmFrZTI3XFxEZXNrdG9wXFxyZWdpc3Ryby1hcHAtY2FwdHVyZVxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBleHBoYnMgZnJvbSAnZXhwcmVzcy1oYW5kbGViYXJzJztcclxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XHJcbi8vIGltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuLy8gaW1wb3J0IGZsYXNoIGZyb20gJ2Nvbm5lY3QtZmxhc2gnO1xyXG5pbXBvcnQgc2Vzc2lvbiBmcm9tICdleHByZXNzLXNlc3Npb24nO1xyXG4vLyBpbXBvcnQgcmVxdWVzdCBmcm9tICdyZXF1ZXN0JztcclxuXHJcblxyXG5cclxuLy8gSW5pdGlsaXphdGlvbnNcclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuLy8gRGF0YWJhc2UgQ29ubmVjdGlvbnNcclxuaW1wb3J0IHtzZXF1ZWxpemV9IGZyb20gJy4vY29uZmlnL2RiY29uZmlnJztcclxuLy8gVGVzdCBEYXRhQmFzZVxyXG4gc2VxdWVsaXplLmF1dGhlbnRpY2F0ZSgpXHJcbiAgLnRoZW4oZnVuY3Rpb24oZXJyKSB7XHJcbiAgICBjb25zb2xlLmxvZygnQ29ubmVjdGlvbiBoYXMgYmVlbiBlc3RhYmxpc2hlZCBzdWNjZXNzZnVsbHkuJyk7XHJcbiAgfSlcclxuICAuY2F0Y2goZnVuY3Rpb24gKGVycikge1xyXG4gICAgY29uc29sZS5sb2coJ1VuYWJsZSB0byBjb25uZWN0IHRvIHRoZSBkYXRhYmFzZTonLCBlcnIpO1xyXG4gIH0pO1xyXG4vLyBTZXRpbmdzXHJcbmFwcC5zZXQoJ3BvcnQnLCBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDApO1xyXG5hcHAuc2V0KCd2aWV3cycsIHBhdGguam9pbihfX2Rpcm5hbWUsICcuL3ZpZXdzJykpO1xyXG5hcHAuZW5naW5lKCcuaGJzJywgZXhwaGJzKHtcclxuICAgIGRlZmF1bHRMYXlvdXQ6ICdtYWluJyxcclxuICAgIGxheW91dERpcjogcGF0aC5qb2luKGFwcC5nZXQoJ3ZpZXdzJyksICdsYXlvdXRzJyksXHJcbiAgICBwYXJ0aWFsc0RpcjogcGF0aC5qb2luKGFwcC5nZXQoJ3ZpZXdzJyksICdwYXJ0aWFscycpLFxyXG4gICAgZXh0bmFtZTogJy5oYnMnXHJcbn0pKTtcclxuYXBwLnNldCgndmlldyBlbmdpbmUnLCAnLmhicycpO1xyXG5cclxuLy8gbWlkZGxld2FyZVxyXG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7ZXh0ZW5kZWQ6IGZhbHNlfSkpO1xyXG4vLyBhcHAudXNlKG1vcmdhbignZGV2JykpO1xyXG5hcHAudXNlKHNlc3Npb24oe1xyXG4gIHNlY3JldDogJ215c2VjcmV0MjcnLFxyXG4gIHJlc2F2ZTogdHJ1ZSxcclxuICBzYXZlVW5pbml0aWFsaXplZDogdHJ1ZVxyXG59KSk7XHJcbi8vIGFwcC51c2UoZmxhc2goKSk7XHJcblxyXG5cclxuLy8gcm91dGVzXHJcbmFwcC51c2UocmVxdWlyZSgnLi9yb3V0ZXMvZm9ybScpKTtcclxuXHJcbi8vIFN0YXRpYyBGaWxlc1xyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcuL2Fzc2V0cycpKSk7XHJcblxyXG4vLyBHbG9iYWwgVmFyaWFibGVzXHJcbi8vIGFwcC51c2UoKHJlcSxyZXMsbmV4dCk9PiB7XHJcbi8vICAgICByZXMubG9jYWxzLnN1Y2Nlc3NfbXNnID0gcmVxLmZsYXNoKCdzdWNjZXNzX21zZycpO1xyXG4vLyAgICAgcmVzLmxvY2Fscy5lcnJvcl9tc2cgPSByZXEuZmxhc2goJ2Vycm9yX21zZycpO1xyXG4vLyAgICAgcmVzLmxvY2Fscy5lcnJvciA9IHJlcS5mbGFzaCgnZXJyb3InKTtcclxuLy8gICAgIHJlcy5sb2NhbHMudXNlciA9IHJlcS51c2VyIHx8IG51bGw7XHJcbi8vICAgICBuZXh0KCk7XHJcbi8vIH0pO1xyXG4vLyBTZXJ2ZXIgaXMgbGlzdGVubmluZ1xyXG5hcHAubGlzdGVuKGFwcC5nZXQoJ3BvcnQnKSwgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ1NlcnZlciBvbiBwb3J0JywgYXBwLmdldCgncG9ydCcpKTtcclxufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "sequelize",
        "authenticate",
        "then",
        "err",
        "console",
        "log",
        "set",
        "process",
        "env",
        "PORT",
        "path",
        "join",
        "__dirname",
        "engine",
        "defaultLayout",
        "layoutDir",
        "get",
        "partialsDir",
        "extname",
        "use",
        "express",
        "urlencoded",
        "extended",
        "secret",
        "resave",
        "saveUninitialized",
        "require",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AAGA;;AASA;;;;AAXA;AACA;AAEA;AAIA;AACA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;;AAEA;AACCC,oBAAUC,YAAV,GACEC,IADF,CACO,UAASC,GAAT,EAAc;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AACD,CAHF,WAIQ,UAAUF,GAAV,EAAe;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDF,GAAlD;AACD,CANF,E,CAOD;;;AACAJ,GAAG,CAACO,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AACAV,GAAG,CAACO,GAAJ,CAAQ,OAAR,EAAiBI,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,SAArB,CAAjB;AACAb,GAAG,CAACc,MAAJ,CAAW,MAAX,EAAmB,mCAAO;AACtBC,EAAAA,aAAa,EAAE,MADO;AAEtBC,EAAAA,SAAS,EAAEL,iBAAKC,IAAL,CAAUZ,GAAG,CAACiB,GAAJ,CAAQ,OAAR,CAAV,EAA4B,SAA5B,CAFW;AAGtBC,EAAAA,WAAW,EAAEP,iBAAKC,IAAL,CAAUZ,GAAG,CAACiB,GAAJ,CAAQ,OAAR,CAAV,EAA4B,UAA5B,CAHS;AAItBE,EAAAA,OAAO,EAAE;AAJa,CAAP,CAAnB;AAMAnB,GAAG,CAACO,GAAJ,CAAQ,aAAR,EAAuB,MAAvB,E,CAEA;;AACAP,GAAG,CAACoB,GAAJ,CAAQC,oBAAQC,UAAR,CAAmB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAnB,CAAR,E,CACA;;AACAvB,GAAG,CAACoB,GAAJ,CAAQ,gCAAQ;AACdI,EAAAA,MAAM,EAAE,YADM;AAEdC,EAAAA,MAAM,EAAE,IAFM;AAGdC,EAAAA,iBAAiB,EAAE;AAHL,CAAR,CAAR,E,CAKA;AAGA;;AACA1B,GAAG,CAACoB,GAAJ,CAAQO,OAAO,CAAC,eAAD,CAAf,E,CAEA;;AACA3B,GAAG,CAACoB,GAAJ,CAAQC,8BAAeV,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAf,CAAR,E,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAb,GAAG,CAAC4B,MAAJ,CAAW5B,GAAG,CAACiB,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAC9BZ,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BN,GAAG,CAACiB,GAAJ,CAAQ,MAAR,CAA9B;AACH,CAFD",
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport exphbs from 'express-handlebars';\r\nimport path from 'path';\r\n// import Sequelize from 'sequelize';\r\n// import flash from 'connect-flash';\r\nimport session from 'express-session';\r\n// import request from 'request';\r\n\r\n\r\n\r\n// Initilizations\r\nconst app = express();\r\n\r\n// Database Connections\r\nimport {sequelize} from './config/dbconfig';\r\n// Test DataBase\r\n sequelize.authenticate()\r\n  .then(function(err) {\r\n    console.log('Connection has been established successfully.');\r\n  })\r\n  .catch(function (err) {\r\n    console.log('Unable to connect to the database:', err);\r\n  });\r\n// Setings\r\napp.set('port', process.env.PORT || 3000);\r\napp.set('views', path.join(__dirname, './views'));\r\napp.engine('.hbs', exphbs({\r\n    defaultLayout: 'main',\r\n    layoutDir: path.join(app.get('views'), 'layouts'),\r\n    partialsDir: path.join(app.get('views'), 'partials'),\r\n    extname: '.hbs'\r\n}));\r\napp.set('view engine', '.hbs');\r\n\r\n// middleware\r\napp.use(express.urlencoded({extended: false}));\r\n// app.use(morgan('dev'));\r\napp.use(session({\r\n  secret: 'mysecret27',\r\n  resave: true,\r\n  saveUninitialized: true\r\n}));\r\n// app.use(flash());\r\n\r\n\r\n// routes\r\napp.use(require('./routes/form'));\r\n\r\n// Static Files\r\napp.use(express.static(path.join(__dirname, './assets')));\r\n\r\n// Global Variables\r\n// app.use((req,res,next)=> {\r\n//     res.locals.success_msg = req.flash('success_msg');\r\n//     res.locals.error_msg = req.flash('error_msg');\r\n//     res.locals.error = req.flash('error');\r\n//     res.locals.user = req.user || null;\r\n//     next();\r\n// });\r\n// Server is listenning\r\napp.listen(app.get('port'), () => {\r\n    console.log('Server on port', app.get('port'));\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1566351684258
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"filename\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\config\\\\dbconfig.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\config\\dbconfig.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\config\\dbconfig.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\config\\dbconfig.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\config",
        "sourceFileName": "dbconfig.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sequelize = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar sequelize = new _sequelize[\"default\"]('nuevo_registro', 'root', 'Ramesh2627', {\n  host: 'localhost',\n  dialect: 'mysql',\n  pool: {\n    max: 5,\n    min: 0,\n    require: 30000,\n    idle: 10000\n  }\n});\nexports.sequelize = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiY29uZmlnLmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImhvc3QiLCJkaWFsZWN0IiwicG9vbCIsIm1heCIsIm1pbiIsInJlcXVpcmUiLCJpZGxlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFUyxJQUFNQSxTQUFTLEdBQUcsSUFBSUMscUJBQUosQ0FBYyxnQkFBZCxFQUFnQyxNQUFoQyxFQUF3QyxZQUF4QyxFQUMxQjtBQUNHQyxFQUFBQSxJQUFJLEVBQUUsV0FEVDtBQUVHQyxFQUFBQSxPQUFPLEVBQUUsT0FGWjtBQUdHQyxFQUFBQSxJQUFJLEVBQUM7QUFDREMsSUFBQUEsR0FBRyxFQUFFLENBREo7QUFFREMsSUFBQUEsR0FBRyxFQUFFLENBRko7QUFHREMsSUFBQUEsT0FBTyxFQUFFLEtBSFI7QUFJREMsSUFBQUEsSUFBSSxFQUFDO0FBSko7QUFIUixDQUQwQixDQUFsQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHNpbGVudC1zbmFrZTI3XFxEZXNrdG9wXFxyZWdpc3Ryby1hcHAtY2FwdHVyZVxcc3JjXFxjb25maWciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XHJcblxyXG4gIGV4cG9ydCBjb25zdCBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKCdudWV2b19yZWdpc3RybycsICdyb290JywgJ1JhbWVzaDI2MjcnLFxyXG4ge1xyXG4gICAgaG9zdDogJ2xvY2FsaG9zdCcsXHJcbiAgICBkaWFsZWN0OiAnbXlzcWwnLFxyXG4gICAgcG9vbDp7XHJcbiAgICAgICAgbWF4OiA1LFxyXG4gICAgICAgIG1pbjogMCxcclxuICAgICAgICByZXF1aXJlOiAzMDAwMCxcclxuICAgICAgICBpZGxlOjEwMDAwXHJcbiAgICB9XHJcbn0pO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "dbconfig.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "pool",
        "max",
        "min",
        "require",
        "idle"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAES,IAAMA,SAAS,GAAG,IAAIC,qBAAJ,CAAc,gBAAd,EAAgC,MAAhC,EAAwC,YAAxC,EAC1B;AACGC,EAAAA,IAAI,EAAE,WADT;AAEGC,EAAAA,OAAO,EAAE,OAFZ;AAGGC,EAAAA,IAAI,EAAC;AACDC,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,GAAG,EAAE,CAFJ;AAGDC,IAAAA,OAAO,EAAE,KAHR;AAIDC,IAAAA,IAAI,EAAC;AAJJ;AAHR,CAD0B,CAAlB",
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\config",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\n\r\n  export const sequelize = new Sequelize('nuevo_registro', 'root', 'Ramesh2627',\r\n {\r\n    host: 'localhost',\r\n    dialect: 'mysql',\r\n    pool:{\r\n        max: 5,\r\n        min: 0,\r\n        require: 30000,\r\n        idle:10000\r\n    }\r\n});\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566318373856
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\app\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"filename\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\app\\\\routes\\\\form.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\routes\\form.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\routes\\form.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\routes\\form.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\routes",
        "sourceFileName": "form.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = require(\"express\");\n\nvar _request = _interopRequireDefault(require(\"request\"));\n\nvar _controller = require(\"../../controllers/controller.socio\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\n// const db = require('../../config/dbConnection');\n// const validations = require('../../config/validations');\nrouter.get('/', function (req, res) {\n  res.render('form');\n});\nrouter.post('/', _controller.savesocioDB);\nmodule.exports = router; // res.redirect('/');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcm0uanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwicmVuZGVyIiwicG9zdCIsInNhdmVzb2Npb0RCIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQTs7QUFFQTs7OztBQUhBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUlFO0FBQ0Y7QUFDQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFDQyxHQUFELEVBQUtDLEdBQUwsRUFBYTtBQUN6QkEsRUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsTUFBWDtBQUNILENBRkQ7QUFLQUosTUFBTSxDQUFDSyxJQUFQLENBQVksR0FBWixFQUFpQkMsdUJBQWpCO0FBTUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFrQlIsTUFBbEIsQyxDQUlBIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcc2lsZW50LXNuYWtlMjdcXERlc2t0b3BcXHJlZ2lzdHJvLWFwcC1jYXB0dXJlXFxzcmNcXGFwcFxccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSb3V0ZXJ9IGZyb20gJ2V4cHJlc3MnO1xyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuaW1wb3J0IHJlcXVlc3QgZnJvbSAncmVxdWVzdCc7XHJcbi8vIGNvbnN0IHtudWV2b1NvY2lvc30gPSByZXF1aXJlKCcuLi9tb2RlbHMvbnVldm9zX3NvY2lvcycpO1xyXG5pbXBvcnQge3NhdmVzb2Npb0RCfSBmcm9tICcuLi8uLi9jb250cm9sbGVycy9jb250cm9sbGVyLnNvY2lvJztcclxuICAvLyBjb25zdCBkYiA9IHJlcXVpcmUoJy4uLy4uL2NvbmZpZy9kYkNvbm5lY3Rpb24nKTtcclxuLy8gY29uc3QgdmFsaWRhdGlvbnMgPSByZXF1aXJlKCcuLi8uLi9jb25maWcvdmFsaWRhdGlvbnMnKTtcclxucm91dGVyLmdldCgnLycsIChyZXEscmVzKSA9PiB7XHJcbiAgICByZXMucmVuZGVyKCdmb3JtJyk7XHJcbn0pO1xyXG5cclxuXHJcbnJvdXRlci5wb3N0KCcvJywgc2F2ZXNvY2lvREIpXHJcbiAgXHJcbiAgXHJcbiBcclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyAgPSByb3V0ZXI7XHJcblxyXG5cclxuXHJcbi8vIHJlcy5yZWRpcmVjdCgnLycpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "form.js"
      ],
      "names": [
        "router",
        "get",
        "req",
        "res",
        "render",
        "post",
        "savesocioDB",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AAEA;;AAEA;;;;AAHA,IAAMA,MAAM,GAAG,sBAAf;AAIE;AACF;AACAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACzBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,MAAX;AACH,CAFD;AAKAJ,MAAM,CAACK,IAAP,CAAY,GAAZ,EAAiBC,uBAAjB;AAMAC,MAAM,CAACC,OAAP,GAAkBR,MAAlB,C,CAIA",
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\routes",
      "sourcesContent": [
        "import {Router} from 'express';\r\nconst router = Router();\r\nimport request from 'request';\r\n// const {nuevoSocios} = require('../models/nuevos_socios');\r\nimport {savesocioDB} from '../../controllers/controller.socio';\r\n  // const db = require('../../config/dbConnection');\r\n// const validations = require('../../config/validations');\r\nrouter.get('/', (req,res) => {\r\n    res.render('form');\r\n});\r\n\r\n\r\nrouter.post('/', savesocioDB)\r\n  \r\n  \r\n \r\n\r\n\r\nmodule.exports  = router;\r\n\r\n\r\n\r\n// res.redirect('/');"
      ]
    },
    "sourceType": "script",
    "mtime": 1566099525422
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"filename\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\controllers\\\\Nuevo_socios.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers\\Nuevo_socios.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers\\Nuevo_socios.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers\\Nuevo_socios.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers",
        "sourceFileName": "Nuevo_socios.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction savesocioDB(req, res) {\n  //  const data = req.body;\n  //  const {Nombre,Cedula,EstadoCivil,DireccionResidencial,Provincia,Telefonos,Celular,OficinaTrabajo,DireccionTrabajo,Telefono,Fax,PuestoTrabajo,FechaIngresoEmpresa,Sueldo,Email} = req.body;\n  //  let errors = [];\n  //    if (typeof Nombre === 'string' && Nombre.length >=2 && /^[a-z]+$/i.test(Nombre)) {\n  //      errors.push({text: 'Cedula solo puede llevar caracteres numericos'});\n  //    }\n  //    if (typeof Cedula === 'number' && Cedula.length >=5 && /^[1--9]+$/i.test(Cedula)) {\n  //        errors.push({text: 'Cedula solo puede llevar caracteres numericos'});\n  //    }\n  //    if (!EstadoCivil) {\n  //        errors.push({text: 'Por favor seleccione su Estado Civil'});\n  //    }\n  //    if (!DireccionResidencial) {\n  //        errors.push({text: 'El siguiente campo esta vacio: Dirección Residencial'});\n  //    }\n  //    if (!Provincia) {\n  //      errors.push({text: 'El siguiente campo esta vacio: Dirección Residencial'});\n  //    }\n  //    if(errors.length > 0) {\n  //        res.render('form', {errors,Nombre,Cedula,EstadoCivil,DireccionResidencial,Provincia,Telefonos,Celular,OficinaTrabajo,DireccionTrabajo,Telefono,Fax,PuestoTrabajo,FechaIngresoEmpresa,Sueldo,Email});\n  //      }else {\n  //        const socioName = await Socio.findOne({Nombre: Nombre});\n  //        if (socioName) {\n  //          req.flash('error', 'El correo ya esta en uso');\n  //          res.redirect('/users/signup');\n  //        }\n  //      }\n  // //  await pool.query( 'INSERT INTO nuevos_socios set ?', [data]);\n  // //  await pool.query( 'INSERT INTO data_register set ?', [data]);\n  // console.log(errors);\n  console.log(req.body);\n  res.send('received');\n}\n\n;\nvar _default = savesocioDB;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk51ZXZvX3NvY2lvcy5qcyJdLCJuYW1lcyI6WyJzYXZlc29jaW9EQiIsInJlcSIsInJlcyIsImNvbnNvbGUiLCJsb2ciLCJib2R5Iiwic2VuZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLFNBQVNBLFdBQVQsQ0FBc0JDLEdBQXRCLEVBQTBCQyxHQUExQixFQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILEdBQUcsQ0FBQ0ksSUFBaEI7QUFDQUgsRUFBQUEsR0FBRyxDQUFDSSxJQUFKLENBQVMsVUFBVDtBQUNDOztBQUFBO2VBRWVOLFciLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxzaWxlbnQtc25ha2UyN1xcRGVza3RvcFxccmVnaXN0cm8tYXBwLWNhcHR1cmVcXHNyY1xcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBzYXZlc29jaW9EQiAocmVxLHJlcykge1xyXG4vLyAgY29uc3QgZGF0YSA9IHJlcS5ib2R5O1xyXG4vLyAgY29uc3Qge05vbWJyZSxDZWR1bGEsRXN0YWRvQ2l2aWwsRGlyZWNjaW9uUmVzaWRlbmNpYWwsUHJvdmluY2lhLFRlbGVmb25vcyxDZWx1bGFyLE9maWNpbmFUcmFiYWpvLERpcmVjY2lvblRyYWJham8sVGVsZWZvbm8sRmF4LFB1ZXN0b1RyYWJham8sRmVjaGFJbmdyZXNvRW1wcmVzYSxTdWVsZG8sRW1haWx9ID0gcmVxLmJvZHk7XHJcbi8vICBsZXQgZXJyb3JzID0gW107XHJcbi8vICAgIGlmICh0eXBlb2YgTm9tYnJlID09PSAnc3RyaW5nJyAmJiBOb21icmUubGVuZ3RoID49MiAmJiAvXlthLXpdKyQvaS50ZXN0KE5vbWJyZSkpIHtcclxuLy8gICAgICBlcnJvcnMucHVzaCh7dGV4dDogJ0NlZHVsYSBzb2xvIHB1ZWRlIGxsZXZhciBjYXJhY3RlcmVzIG51bWVyaWNvcyd9KTtcclxuLy8gICAgfVxyXG4vLyAgICBpZiAodHlwZW9mIENlZHVsYSA9PT0gJ251bWJlcicgJiYgQ2VkdWxhLmxlbmd0aCA+PTUgJiYgL15bMS0tOV0rJC9pLnRlc3QoQ2VkdWxhKSkge1xyXG4vLyAgICAgICAgZXJyb3JzLnB1c2goe3RleHQ6ICdDZWR1bGEgc29sbyBwdWVkZSBsbGV2YXIgY2FyYWN0ZXJlcyBudW1lcmljb3MnfSk7XHJcbi8vICAgIH1cclxuLy8gICAgaWYgKCFFc3RhZG9DaXZpbCkge1xyXG4vLyAgICAgICAgZXJyb3JzLnB1c2goe3RleHQ6ICdQb3IgZmF2b3Igc2VsZWNjaW9uZSBzdSBFc3RhZG8gQ2l2aWwnfSk7XHJcbi8vICAgIH1cclxuXHJcbi8vICAgIGlmICghRGlyZWNjaW9uUmVzaWRlbmNpYWwpIHtcclxuLy8gICAgICAgIGVycm9ycy5wdXNoKHt0ZXh0OiAnRWwgc2lndWllbnRlIGNhbXBvIGVzdGEgdmFjaW86IERpcmVjY2nDs24gUmVzaWRlbmNpYWwnfSk7XHJcbi8vICAgIH1cclxuLy8gICAgaWYgKCFQcm92aW5jaWEpIHtcclxuLy8gICAgICBlcnJvcnMucHVzaCh7dGV4dDogJ0VsIHNpZ3VpZW50ZSBjYW1wbyBlc3RhIHZhY2lvOiBEaXJlY2Npw7NuIFJlc2lkZW5jaWFsJ30pO1xyXG4vLyAgICB9XHJcblxyXG4vLyAgICBpZihlcnJvcnMubGVuZ3RoID4gMCkge1xyXG4vLyAgICAgICAgcmVzLnJlbmRlcignZm9ybScsIHtlcnJvcnMsTm9tYnJlLENlZHVsYSxFc3RhZG9DaXZpbCxEaXJlY2Npb25SZXNpZGVuY2lhbCxQcm92aW5jaWEsVGVsZWZvbm9zLENlbHVsYXIsT2ZpY2luYVRyYWJham8sRGlyZWNjaW9uVHJhYmFqbyxUZWxlZm9ubyxGYXgsUHVlc3RvVHJhYmFqbyxGZWNoYUluZ3Jlc29FbXByZXNhLFN1ZWxkbyxFbWFpbH0pO1xyXG4vLyAgICAgIH1lbHNlIHtcclxuLy8gICAgICAgIGNvbnN0IHNvY2lvTmFtZSA9IGF3YWl0IFNvY2lvLmZpbmRPbmUoe05vbWJyZTogTm9tYnJlfSk7XHJcbi8vICAgICAgICBpZiAoc29jaW9OYW1lKSB7XHJcbi8vICAgICAgICAgIHJlcS5mbGFzaCgnZXJyb3InLCAnRWwgY29ycmVvIHlhIGVzdGEgZW4gdXNvJyk7XHJcbi8vICAgICAgICAgIHJlcy5yZWRpcmVjdCgnL3VzZXJzL3NpZ251cCcpO1xyXG4vLyAgICAgICAgfVxyXG4vLyAgICAgIH1cclxuLy8gLy8gIGF3YWl0IHBvb2wucXVlcnkoICdJTlNFUlQgSU5UTyBudWV2b3Nfc29jaW9zIHNldCA/JywgW2RhdGFdKTtcclxuLy8gLy8gIGF3YWl0IHBvb2wucXVlcnkoICdJTlNFUlQgSU5UTyBkYXRhX3JlZ2lzdGVyIHNldCA/JywgW2RhdGFdKTtcclxuLy8gY29uc29sZS5sb2coZXJyb3JzKTtcclxuY29uc29sZS5sb2cocmVxLmJvZHkpO1xyXG5yZXMuc2VuZCgncmVjZWl2ZWQnKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0ICBzYXZlc29jaW9EQjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Nuevo_socios.js"
      ],
      "names": [
        "savesocioDB",
        "req",
        "res",
        "console",
        "log",
        "body",
        "send"
      ],
      "mappings": ";;;;;;;AAAA,SAASA,WAAT,CAAsBC,GAAtB,EAA0BC,GAA1B,EAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACAH,EAAAA,GAAG,CAACI,IAAJ,CAAS,UAAT;AACC;;AAAA;eAEeN,W",
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers",
      "sourcesContent": [
        "function savesocioDB (req,res) {\r\n//  const data = req.body;\r\n//  const {Nombre,Cedula,EstadoCivil,DireccionResidencial,Provincia,Telefonos,Celular,OficinaTrabajo,DireccionTrabajo,Telefono,Fax,PuestoTrabajo,FechaIngresoEmpresa,Sueldo,Email} = req.body;\r\n//  let errors = [];\r\n//    if (typeof Nombre === 'string' && Nombre.length >=2 && /^[a-z]+$/i.test(Nombre)) {\r\n//      errors.push({text: 'Cedula solo puede llevar caracteres numericos'});\r\n//    }\r\n//    if (typeof Cedula === 'number' && Cedula.length >=5 && /^[1--9]+$/i.test(Cedula)) {\r\n//        errors.push({text: 'Cedula solo puede llevar caracteres numericos'});\r\n//    }\r\n//    if (!EstadoCivil) {\r\n//        errors.push({text: 'Por favor seleccione su Estado Civil'});\r\n//    }\r\n\r\n//    if (!DireccionResidencial) {\r\n//        errors.push({text: 'El siguiente campo esta vacio: Dirección Residencial'});\r\n//    }\r\n//    if (!Provincia) {\r\n//      errors.push({text: 'El siguiente campo esta vacio: Dirección Residencial'});\r\n//    }\r\n\r\n//    if(errors.length > 0) {\r\n//        res.render('form', {errors,Nombre,Cedula,EstadoCivil,DireccionResidencial,Provincia,Telefonos,Celular,OficinaTrabajo,DireccionTrabajo,Telefono,Fax,PuestoTrabajo,FechaIngresoEmpresa,Sueldo,Email});\r\n//      }else {\r\n//        const socioName = await Socio.findOne({Nombre: Nombre});\r\n//        if (socioName) {\r\n//          req.flash('error', 'El correo ya esta en uso');\r\n//          res.redirect('/users/signup');\r\n//        }\r\n//      }\r\n// //  await pool.query( 'INSERT INTO nuevos_socios set ?', [data]);\r\n// //  await pool.query( 'INSERT INTO data_register set ?', [data]);\r\n// console.log(errors);\r\nconsole.log(req.body);\r\nres.send('received');\r\n};\r\n\r\nexport default  savesocioDB;"
      ]
    },
    "sourceType": "script",
    "mtime": 1565028791866
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"filename\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\controllers\\\\nuevo_socios.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers\\nuevo_socios.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers\\nuevo_socios.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers\\nuevo_socios.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers",
        "sourceFileName": "nuevo_socios.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.savesocioDB = savesocioDB;\n\nfunction savesocioDB(req, res) {\n  //  const data = req.body;\n  var _req$body = req.body,\n      Nombre = _req$body.Nombre,\n      Cedula = _req$body.Cedula,\n      EstadoCivil = _req$body.EstadoCivil,\n      DireccionResidencial = _req$body.DireccionResidencial,\n      Provincia = _req$body.Provincia,\n      Telefonos = _req$body.Telefonos,\n      Celular = _req$body.Celular,\n      OficinaTrabajo = _req$body.OficinaTrabajo,\n      DireccionTrabajo = _req$body.DireccionTrabajo,\n      Telefono = _req$body.Telefono,\n      Fax = _req$body.Fax,\n      PuestoTrabajo = _req$body.PuestoTrabajo,\n      FechaIngresoEmpresa = _req$body.FechaIngresoEmpresa,\n      Sueldo = _req$body.Sueldo,\n      Email = _req$body.Email;\n  var errors = [];\n\n  if (typeof Nombre === 'string' && Nombre.length >= 2 && /^[a-z]+$/i.test(Nombre)) {\n    errors.push({\n      text: 'Cedula solo puede llevar caracteres numericos'\n    });\n  }\n\n  if (typeof Cedula === 'number' && Cedula.length >= 5 && /^[1--9]+$/i.test(Cedula)) {\n    errors.push({\n      text: 'Cedula solo puede llevar caracteres numericos'\n    });\n  }\n\n  if (!EstadoCivil) {\n    errors.push({\n      text: 'Por favor seleccione su Estado Civil'\n    });\n  }\n\n  if (!DireccionResidencial) {\n    errors.push({\n      text: 'El siguiente campo esta vacio: Dirección Residencial'\n    });\n  }\n\n  if (!Provincia) {\n    errors.push({\n      text: 'El siguiente campo esta vacio: Dirección Residencial'\n    });\n  }\n\n  if (errors.length > 0) {\n    res.render('form', {\n      errors: errors,\n      Nombre: Nombre,\n      Cedula: Cedula,\n      EstadoCivil: EstadoCivil,\n      DireccionResidencial: DireccionResidencial,\n      Provincia: Provincia,\n      Telefonos: Telefonos,\n      Celular: Celular,\n      OficinaTrabajo: OficinaTrabajo,\n      DireccionTrabajo: DireccionTrabajo,\n      Telefono: Telefono,\n      Fax: Fax,\n      PuestoTrabajo: PuestoTrabajo,\n      FechaIngresoEmpresa: FechaIngresoEmpresa,\n      Sueldo: Sueldo,\n      Email: Email\n    });\n  } //  }else {\n  //    const socioName = await Socio.findOne({Nombre: Nombre});\n  //    if (socioName) {\n  //      req.flash('error', 'El correo ya esta en uso');\n  //      res.redirect('/users/signup');\n  //    }\n  //  }\n  //  await pool.query( 'INSERT INTO nuevos_socios set ?', [data]);\n  //  await pool.query( 'INSERT INTO data_register set ?', [data]);\n\n\n  console.log(errors);\n  console.log(req.body); // res.send('received');\n}\n\n;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm51ZXZvX3NvY2lvcy5qcyJdLCJuYW1lcyI6WyJzYXZlc29jaW9EQiIsInJlcSIsInJlcyIsImJvZHkiLCJOb21icmUiLCJDZWR1bGEiLCJFc3RhZG9DaXZpbCIsIkRpcmVjY2lvblJlc2lkZW5jaWFsIiwiUHJvdmluY2lhIiwiVGVsZWZvbm9zIiwiQ2VsdWxhciIsIk9maWNpbmFUcmFiYWpvIiwiRGlyZWNjaW9uVHJhYmFqbyIsIlRlbGVmb25vIiwiRmF4IiwiUHVlc3RvVHJhYmFqbyIsIkZlY2hhSW5ncmVzb0VtcHJlc2EiLCJTdWVsZG8iLCJFbWFpbCIsImVycm9ycyIsImxlbmd0aCIsInRlc3QiLCJwdXNoIiwidGV4dCIsInJlbmRlciIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFTyxTQUFTQSxXQUFULENBQXNCQyxHQUF0QixFQUEwQkMsR0FBMUIsRUFBK0I7QUFDdEM7QUFEc0Msa0JBRTRJRCxHQUFHLENBQUNFLElBRmhKO0FBQUEsTUFFOUJDLE1BRjhCLGFBRTlCQSxNQUY4QjtBQUFBLE1BRXZCQyxNQUZ1QixhQUV2QkEsTUFGdUI7QUFBQSxNQUVoQkMsV0FGZ0IsYUFFaEJBLFdBRmdCO0FBQUEsTUFFSkMsb0JBRkksYUFFSkEsb0JBRkk7QUFBQSxNQUVpQkMsU0FGakIsYUFFaUJBLFNBRmpCO0FBQUEsTUFFMkJDLFNBRjNCLGFBRTJCQSxTQUYzQjtBQUFBLE1BRXFDQyxPQUZyQyxhQUVxQ0EsT0FGckM7QUFBQSxNQUU2Q0MsY0FGN0MsYUFFNkNBLGNBRjdDO0FBQUEsTUFFNERDLGdCQUY1RCxhQUU0REEsZ0JBRjVEO0FBQUEsTUFFNkVDLFFBRjdFLGFBRTZFQSxRQUY3RTtBQUFBLE1BRXNGQyxHQUZ0RixhQUVzRkEsR0FGdEY7QUFBQSxNQUUwRkMsYUFGMUYsYUFFMEZBLGFBRjFGO0FBQUEsTUFFd0dDLG1CQUZ4RyxhQUV3R0EsbUJBRnhHO0FBQUEsTUFFNEhDLE1BRjVILGFBRTRIQSxNQUY1SDtBQUFBLE1BRW1JQyxLQUZuSSxhQUVtSUEsS0FGbkk7QUFHckMsTUFBSUMsTUFBTSxHQUFHLEVBQWI7O0FBQ0UsTUFBSSxPQUFPZixNQUFQLEtBQWtCLFFBQWxCLElBQThCQSxNQUFNLENBQUNnQixNQUFQLElBQWdCLENBQTlDLElBQW1ELFlBQVlDLElBQVosQ0FBaUJqQixNQUFqQixDQUF2RCxFQUFpRjtBQUMvRWUsSUFBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVk7QUFBQ0MsTUFBQUEsSUFBSSxFQUFFO0FBQVAsS0FBWjtBQUNEOztBQUNELE1BQUksT0FBT2xCLE1BQVAsS0FBa0IsUUFBbEIsSUFBOEJBLE1BQU0sQ0FBQ2UsTUFBUCxJQUFnQixDQUE5QyxJQUFtRCxhQUFhQyxJQUFiLENBQWtCaEIsTUFBbEIsQ0FBdkQsRUFBa0Y7QUFDOUVjLElBQUFBLE1BQU0sQ0FBQ0csSUFBUCxDQUFZO0FBQUNDLE1BQUFBLElBQUksRUFBRTtBQUFQLEtBQVo7QUFDSDs7QUFDRCxNQUFJLENBQUNqQixXQUFMLEVBQWtCO0FBQ2RhLElBQUFBLE1BQU0sQ0FBQ0csSUFBUCxDQUFZO0FBQUNDLE1BQUFBLElBQUksRUFBRTtBQUFQLEtBQVo7QUFDSDs7QUFFRCxNQUFJLENBQUNoQixvQkFBTCxFQUEyQjtBQUN2QlksSUFBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVk7QUFBQ0MsTUFBQUEsSUFBSSxFQUFFO0FBQVAsS0FBWjtBQUNIOztBQUNELE1BQUksQ0FBQ2YsU0FBTCxFQUFnQjtBQUNkVyxJQUFBQSxNQUFNLENBQUNHLElBQVAsQ0FBWTtBQUFDQyxNQUFBQSxJQUFJLEVBQUU7QUFBUCxLQUFaO0FBQ0Q7O0FBRUQsTUFBR0osTUFBTSxDQUFDQyxNQUFQLEdBQWdCLENBQW5CLEVBQXNCO0FBQ2xCbEIsSUFBQUEsR0FBRyxDQUFDc0IsTUFBSixDQUFXLE1BQVgsRUFBbUI7QUFBQ0wsTUFBQUEsTUFBTSxFQUFOQSxNQUFEO0FBQVFmLE1BQUFBLE1BQU0sRUFBTkEsTUFBUjtBQUFlQyxNQUFBQSxNQUFNLEVBQU5BLE1BQWY7QUFBc0JDLE1BQUFBLFdBQVcsRUFBWEEsV0FBdEI7QUFBa0NDLE1BQUFBLG9CQUFvQixFQUFwQkEsb0JBQWxDO0FBQXVEQyxNQUFBQSxTQUFTLEVBQVRBLFNBQXZEO0FBQWlFQyxNQUFBQSxTQUFTLEVBQVRBLFNBQWpFO0FBQTJFQyxNQUFBQSxPQUFPLEVBQVBBLE9BQTNFO0FBQW1GQyxNQUFBQSxjQUFjLEVBQWRBLGNBQW5GO0FBQWtHQyxNQUFBQSxnQkFBZ0IsRUFBaEJBLGdCQUFsRztBQUFtSEMsTUFBQUEsUUFBUSxFQUFSQSxRQUFuSDtBQUE0SEMsTUFBQUEsR0FBRyxFQUFIQSxHQUE1SDtBQUFnSUMsTUFBQUEsYUFBYSxFQUFiQSxhQUFoSTtBQUE4SUMsTUFBQUEsbUJBQW1CLEVBQW5CQSxtQkFBOUk7QUFBa0tDLE1BQUFBLE1BQU0sRUFBTkEsTUFBbEs7QUFBeUtDLE1BQUFBLEtBQUssRUFBTEE7QUFBekssS0FBbkI7QUFDSCxHQXZCa0MsQ0F3QmxDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0o7QUFDQTs7O0FBQ0FPLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUCxNQUFaO0FBQ0FNLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZekIsR0FBRyxDQUFDRSxJQUFoQixFQWxDc0MsQ0FtQ3RDO0FBQ0M7O0FBQUEiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxzaWxlbnQtc25ha2UyN1xcRGVza3RvcFxccmVnaXN0cm8tYXBwLWNhcHR1cmVcXHNyY1xcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzYXZlc29jaW9EQiAocmVxLHJlcykge1xyXG4vLyAgY29uc3QgZGF0YSA9IHJlcS5ib2R5O1xyXG4gY29uc3Qge05vbWJyZSxDZWR1bGEsRXN0YWRvQ2l2aWwsRGlyZWNjaW9uUmVzaWRlbmNpYWwsUHJvdmluY2lhLFRlbGVmb25vcyxDZWx1bGFyLE9maWNpbmFUcmFiYWpvLERpcmVjY2lvblRyYWJham8sVGVsZWZvbm8sRmF4LFB1ZXN0b1RyYWJham8sRmVjaGFJbmdyZXNvRW1wcmVzYSxTdWVsZG8sRW1haWx9ID0gcmVxLmJvZHk7XHJcbiBsZXQgZXJyb3JzID0gW107XHJcbiAgIGlmICh0eXBlb2YgTm9tYnJlID09PSAnc3RyaW5nJyAmJiBOb21icmUubGVuZ3RoID49MiAmJiAvXlthLXpdKyQvaS50ZXN0KE5vbWJyZSkpIHtcclxuICAgICBlcnJvcnMucHVzaCh7dGV4dDogJ0NlZHVsYSBzb2xvIHB1ZWRlIGxsZXZhciBjYXJhY3RlcmVzIG51bWVyaWNvcyd9KTtcclxuICAgfVxyXG4gICBpZiAodHlwZW9mIENlZHVsYSA9PT0gJ251bWJlcicgJiYgQ2VkdWxhLmxlbmd0aCA+PTUgJiYgL15bMS0tOV0rJC9pLnRlc3QoQ2VkdWxhKSkge1xyXG4gICAgICAgZXJyb3JzLnB1c2goe3RleHQ6ICdDZWR1bGEgc29sbyBwdWVkZSBsbGV2YXIgY2FyYWN0ZXJlcyBudW1lcmljb3MnfSk7XHJcbiAgIH1cclxuICAgaWYgKCFFc3RhZG9DaXZpbCkge1xyXG4gICAgICAgZXJyb3JzLnB1c2goe3RleHQ6ICdQb3IgZmF2b3Igc2VsZWNjaW9uZSBzdSBFc3RhZG8gQ2l2aWwnfSk7XHJcbiAgIH1cclxuXHJcbiAgIGlmICghRGlyZWNjaW9uUmVzaWRlbmNpYWwpIHtcclxuICAgICAgIGVycm9ycy5wdXNoKHt0ZXh0OiAnRWwgc2lndWllbnRlIGNhbXBvIGVzdGEgdmFjaW86IERpcmVjY2nDs24gUmVzaWRlbmNpYWwnfSk7XHJcbiAgIH1cclxuICAgaWYgKCFQcm92aW5jaWEpIHtcclxuICAgICBlcnJvcnMucHVzaCh7dGV4dDogJ0VsIHNpZ3VpZW50ZSBjYW1wbyBlc3RhIHZhY2lvOiBEaXJlY2Npw7NuIFJlc2lkZW5jaWFsJ30pO1xyXG4gICB9XHJcblxyXG4gICBpZihlcnJvcnMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgcmVzLnJlbmRlcignZm9ybScsIHtlcnJvcnMsTm9tYnJlLENlZHVsYSxFc3RhZG9DaXZpbCxEaXJlY2Npb25SZXNpZGVuY2lhbCxQcm92aW5jaWEsVGVsZWZvbm9zLENlbHVsYXIsT2ZpY2luYVRyYWJham8sRGlyZWNjaW9uVHJhYmFqbyxUZWxlZm9ubyxGYXgsUHVlc3RvVHJhYmFqbyxGZWNoYUluZ3Jlc29FbXByZXNhLFN1ZWxkbyxFbWFpbH0pO1xyXG4gICB9XHJcbiAgICAvLyAgfWVsc2Uge1xyXG4gICAgLy8gICAgY29uc3Qgc29jaW9OYW1lID0gYXdhaXQgU29jaW8uZmluZE9uZSh7Tm9tYnJlOiBOb21icmV9KTtcclxuICAgIC8vICAgIGlmIChzb2Npb05hbWUpIHtcclxuICAgIC8vICAgICAgcmVxLmZsYXNoKCdlcnJvcicsICdFbCBjb3JyZW8geWEgZXN0YSBlbiB1c28nKTtcclxuICAgIC8vICAgICAgcmVzLnJlZGlyZWN0KCcvdXNlcnMvc2lnbnVwJyk7XHJcbiAgICAvLyAgICB9XHJcbiAgICAvLyAgfVxyXG4vLyAgYXdhaXQgcG9vbC5xdWVyeSggJ0lOU0VSVCBJTlRPIG51ZXZvc19zb2Npb3Mgc2V0ID8nLCBbZGF0YV0pO1xyXG4vLyAgYXdhaXQgcG9vbC5xdWVyeSggJ0lOU0VSVCBJTlRPIGRhdGFfcmVnaXN0ZXIgc2V0ID8nLCBbZGF0YV0pO1xyXG5jb25zb2xlLmxvZyhlcnJvcnMpO1xyXG5jb25zb2xlLmxvZyhyZXEuYm9keSk7XHJcbi8vIHJlcy5zZW5kKCdyZWNlaXZlZCcpO1xyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "nuevo_socios.js"
      ],
      "names": [
        "savesocioDB",
        "req",
        "res",
        "body",
        "Nombre",
        "Cedula",
        "EstadoCivil",
        "DireccionResidencial",
        "Provincia",
        "Telefonos",
        "Celular",
        "OficinaTrabajo",
        "DireccionTrabajo",
        "Telefono",
        "Fax",
        "PuestoTrabajo",
        "FechaIngresoEmpresa",
        "Sueldo",
        "Email",
        "errors",
        "length",
        "test",
        "push",
        "text",
        "render",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAEO,SAASA,WAAT,CAAsBC,GAAtB,EAA0BC,GAA1B,EAA+B;AACtC;AADsC,kBAE4ID,GAAG,CAACE,IAFhJ;AAAA,MAE9BC,MAF8B,aAE9BA,MAF8B;AAAA,MAEvBC,MAFuB,aAEvBA,MAFuB;AAAA,MAEhBC,WAFgB,aAEhBA,WAFgB;AAAA,MAEJC,oBAFI,aAEJA,oBAFI;AAAA,MAEiBC,SAFjB,aAEiBA,SAFjB;AAAA,MAE2BC,SAF3B,aAE2BA,SAF3B;AAAA,MAEqCC,OAFrC,aAEqCA,OAFrC;AAAA,MAE6CC,cAF7C,aAE6CA,cAF7C;AAAA,MAE4DC,gBAF5D,aAE4DA,gBAF5D;AAAA,MAE6EC,QAF7E,aAE6EA,QAF7E;AAAA,MAEsFC,GAFtF,aAEsFA,GAFtF;AAAA,MAE0FC,aAF1F,aAE0FA,aAF1F;AAAA,MAEwGC,mBAFxG,aAEwGA,mBAFxG;AAAA,MAE4HC,MAF5H,aAE4HA,MAF5H;AAAA,MAEmIC,KAFnI,aAEmIA,KAFnI;AAGrC,MAAIC,MAAM,GAAG,EAAb;;AACE,MAAI,OAAOf,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACgB,MAAP,IAAgB,CAA9C,IAAmD,YAAYC,IAAZ,CAAiBjB,MAAjB,CAAvD,EAAiF;AAC/Ee,IAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAZ;AACD;;AACD,MAAI,OAAOlB,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACe,MAAP,IAAgB,CAA9C,IAAmD,aAAaC,IAAb,CAAkBhB,MAAlB,CAAvD,EAAkF;AAC9Ec,IAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAZ;AACH;;AACD,MAAI,CAACjB,WAAL,EAAkB;AACda,IAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAZ;AACH;;AAED,MAAI,CAAChB,oBAAL,EAA2B;AACvBY,IAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAZ;AACH;;AACD,MAAI,CAACf,SAAL,EAAgB;AACdW,IAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAZ;AACD;;AAED,MAAGJ,MAAM,CAACC,MAAP,GAAgB,CAAnB,EAAsB;AAClBlB,IAAAA,GAAG,CAACsB,MAAJ,CAAW,MAAX,EAAmB;AAACL,MAAAA,MAAM,EAANA,MAAD;AAAQf,MAAAA,MAAM,EAANA,MAAR;AAAeC,MAAAA,MAAM,EAANA,MAAf;AAAsBC,MAAAA,WAAW,EAAXA,WAAtB;AAAkCC,MAAAA,oBAAoB,EAApBA,oBAAlC;AAAuDC,MAAAA,SAAS,EAATA,SAAvD;AAAiEC,MAAAA,SAAS,EAATA,SAAjE;AAA2EC,MAAAA,OAAO,EAAPA,OAA3E;AAAmFC,MAAAA,cAAc,EAAdA,cAAnF;AAAkGC,MAAAA,gBAAgB,EAAhBA,gBAAlG;AAAmHC,MAAAA,QAAQ,EAARA,QAAnH;AAA4HC,MAAAA,GAAG,EAAHA,GAA5H;AAAgIC,MAAAA,aAAa,EAAbA,aAAhI;AAA8IC,MAAAA,mBAAmB,EAAnBA,mBAA9I;AAAkKC,MAAAA,MAAM,EAANA,MAAlK;AAAyKC,MAAAA,KAAK,EAALA;AAAzK,KAAnB;AACH,GAvBkC,CAwBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;;;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYzB,GAAG,CAACE,IAAhB,EAlCsC,CAmCtC;AACC;;AAAA",
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers",
      "sourcesContent": [
        "\r\n\r\nexport function savesocioDB (req,res) {\r\n//  const data = req.body;\r\n const {Nombre,Cedula,EstadoCivil,DireccionResidencial,Provincia,Telefonos,Celular,OficinaTrabajo,DireccionTrabajo,Telefono,Fax,PuestoTrabajo,FechaIngresoEmpresa,Sueldo,Email} = req.body;\r\n let errors = [];\r\n   if (typeof Nombre === 'string' && Nombre.length >=2 && /^[a-z]+$/i.test(Nombre)) {\r\n     errors.push({text: 'Cedula solo puede llevar caracteres numericos'});\r\n   }\r\n   if (typeof Cedula === 'number' && Cedula.length >=5 && /^[1--9]+$/i.test(Cedula)) {\r\n       errors.push({text: 'Cedula solo puede llevar caracteres numericos'});\r\n   }\r\n   if (!EstadoCivil) {\r\n       errors.push({text: 'Por favor seleccione su Estado Civil'});\r\n   }\r\n\r\n   if (!DireccionResidencial) {\r\n       errors.push({text: 'El siguiente campo esta vacio: Dirección Residencial'});\r\n   }\r\n   if (!Provincia) {\r\n     errors.push({text: 'El siguiente campo esta vacio: Dirección Residencial'});\r\n   }\r\n\r\n   if(errors.length > 0) {\r\n       res.render('form', {errors,Nombre,Cedula,EstadoCivil,DireccionResidencial,Provincia,Telefonos,Celular,OficinaTrabajo,DireccionTrabajo,Telefono,Fax,PuestoTrabajo,FechaIngresoEmpresa,Sueldo,Email});\r\n   }\r\n    //  }else {\r\n    //    const socioName = await Socio.findOne({Nombre: Nombre});\r\n    //    if (socioName) {\r\n    //      req.flash('error', 'El correo ya esta en uso');\r\n    //      res.redirect('/users/signup');\r\n    //    }\r\n    //  }\r\n//  await pool.query( 'INSERT INTO nuevos_socios set ?', [data]);\r\n//  await pool.query( 'INSERT INTO data_register set ?', [data]);\r\nconsole.log(errors);\r\nconsole.log(req.body);\r\n// res.send('received');\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1565059358915
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"filename\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\controllers\\\\controller_socio.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers\\controller_socio.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers\\controller_socio.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers\\controller_socio.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers",
        "sourceFileName": "controller_socio.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.savesocioDB = savesocioDB;\n\nfunction savesocioDB(req, res) {\n  //  const data = req.body;\n  var _req$body = req.body,\n      Nombre = _req$body.Nombre,\n      Cedula = _req$body.Cedula,\n      EstadoCivil = _req$body.EstadoCivil,\n      DireccionResidencial = _req$body.DireccionResidencial,\n      Provincia = _req$body.Provincia,\n      Telefonos = _req$body.Telefonos,\n      Celular = _req$body.Celular,\n      OficinaTrabajo = _req$body.OficinaTrabajo,\n      DireccionTrabajo = _req$body.DireccionTrabajo,\n      Telefono = _req$body.Telefono,\n      Fax = _req$body.Fax,\n      PuestoTrabajo = _req$body.PuestoTrabajo,\n      FechaIngresoEmpresa = _req$body.FechaIngresoEmpresa,\n      Sueldo = _req$body.Sueldo,\n      Email = _req$body.Email;\n  var errors = [];\n\n  if (typeof Nombre === 'string' && Nombre.length >= 2 && /^[a-z]+$/i.test(Nombre)) {\n    errors.push({\n      text: 'Cedula solo puede llevar caracteres numericos'\n    });\n  }\n\n  if (typeof Cedula === 'number' && Cedula.length >= 5 && /^[1--9]+$/i.test(Cedula)) {\n    errors.push({\n      text: 'Cedula solo puede llevar caracteres numericos'\n    });\n  }\n\n  if (!EstadoCivil) {\n    errors.push({\n      text: 'Por favor seleccione su Estado Civil'\n    });\n  }\n\n  if (!DireccionResidencial) {\n    errors.push({\n      text: 'El siguiente campo esta vacio: Dirección Residencial'\n    });\n  }\n\n  if (!Provincia) {\n    errors.push({\n      text: 'El siguiente campo esta vacio: Dirección Residencial'\n    });\n  }\n\n  if (errors.length > 0) {\n    res.render('form', {\n      errors: errors,\n      Nombre: Nombre,\n      Cedula: Cedula,\n      EstadoCivil: EstadoCivil,\n      DireccionResidencial: DireccionResidencial,\n      Provincia: Provincia,\n      Telefonos: Telefonos,\n      Celular: Celular,\n      OficinaTrabajo: OficinaTrabajo,\n      DireccionTrabajo: DireccionTrabajo,\n      Telefono: Telefono,\n      Fax: Fax,\n      PuestoTrabajo: PuestoTrabajo,\n      FechaIngresoEmpresa: FechaIngresoEmpresa,\n      Sueldo: Sueldo,\n      Email: Email\n    });\n  } //  }else {\n  //    const socioName = await Socio.findOne({Nombre: Nombre});\n  //    if (socioName) {\n  //      req.flash('error', 'El correo ya esta en uso');\n  //      res.redirect('/users/signup');\n  //    }\n  //  }\n  //  await pool.query( 'INSERT INTO nuevos_socios set ?', [data]);\n  //  await pool.query( 'INSERT INTO data_register set ?', [data]);\n\n\n  console.log(errors);\n  console.log(req.body); // res.send('received');\n}\n\n;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXJfc29jaW8uanMiXSwibmFtZXMiOlsic2F2ZXNvY2lvREIiLCJyZXEiLCJyZXMiLCJib2R5IiwiTm9tYnJlIiwiQ2VkdWxhIiwiRXN0YWRvQ2l2aWwiLCJEaXJlY2Npb25SZXNpZGVuY2lhbCIsIlByb3ZpbmNpYSIsIlRlbGVmb25vcyIsIkNlbHVsYXIiLCJPZmljaW5hVHJhYmFqbyIsIkRpcmVjY2lvblRyYWJham8iLCJUZWxlZm9ubyIsIkZheCIsIlB1ZXN0b1RyYWJham8iLCJGZWNoYUluZ3Jlc29FbXByZXNhIiwiU3VlbGRvIiwiRW1haWwiLCJlcnJvcnMiLCJsZW5ndGgiLCJ0ZXN0IiwicHVzaCIsInRleHQiLCJyZW5kZXIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRU8sU0FBU0EsV0FBVCxDQUFzQkMsR0FBdEIsRUFBMEJDLEdBQTFCLEVBQStCO0FBQ3RDO0FBRHNDLGtCQUU0SUQsR0FBRyxDQUFDRSxJQUZoSjtBQUFBLE1BRTlCQyxNQUY4QixhQUU5QkEsTUFGOEI7QUFBQSxNQUV2QkMsTUFGdUIsYUFFdkJBLE1BRnVCO0FBQUEsTUFFaEJDLFdBRmdCLGFBRWhCQSxXQUZnQjtBQUFBLE1BRUpDLG9CQUZJLGFBRUpBLG9CQUZJO0FBQUEsTUFFaUJDLFNBRmpCLGFBRWlCQSxTQUZqQjtBQUFBLE1BRTJCQyxTQUYzQixhQUUyQkEsU0FGM0I7QUFBQSxNQUVxQ0MsT0FGckMsYUFFcUNBLE9BRnJDO0FBQUEsTUFFNkNDLGNBRjdDLGFBRTZDQSxjQUY3QztBQUFBLE1BRTREQyxnQkFGNUQsYUFFNERBLGdCQUY1RDtBQUFBLE1BRTZFQyxRQUY3RSxhQUU2RUEsUUFGN0U7QUFBQSxNQUVzRkMsR0FGdEYsYUFFc0ZBLEdBRnRGO0FBQUEsTUFFMEZDLGFBRjFGLGFBRTBGQSxhQUYxRjtBQUFBLE1BRXdHQyxtQkFGeEcsYUFFd0dBLG1CQUZ4RztBQUFBLE1BRTRIQyxNQUY1SCxhQUU0SEEsTUFGNUg7QUFBQSxNQUVtSUMsS0FGbkksYUFFbUlBLEtBRm5JO0FBR3JDLE1BQUlDLE1BQU0sR0FBRyxFQUFiOztBQUNFLE1BQUksT0FBT2YsTUFBUCxLQUFrQixRQUFsQixJQUE4QkEsTUFBTSxDQUFDZ0IsTUFBUCxJQUFnQixDQUE5QyxJQUFtRCxZQUFZQyxJQUFaLENBQWlCakIsTUFBakIsQ0FBdkQsRUFBaUY7QUFDL0VlLElBQUFBLE1BQU0sQ0FBQ0csSUFBUCxDQUFZO0FBQUNDLE1BQUFBLElBQUksRUFBRTtBQUFQLEtBQVo7QUFDRDs7QUFDRCxNQUFJLE9BQU9sQixNQUFQLEtBQWtCLFFBQWxCLElBQThCQSxNQUFNLENBQUNlLE1BQVAsSUFBZ0IsQ0FBOUMsSUFBbUQsYUFBYUMsSUFBYixDQUFrQmhCLE1BQWxCLENBQXZELEVBQWtGO0FBQzlFYyxJQUFBQSxNQUFNLENBQUNHLElBQVAsQ0FBWTtBQUFDQyxNQUFBQSxJQUFJLEVBQUU7QUFBUCxLQUFaO0FBQ0g7O0FBQ0QsTUFBSSxDQUFDakIsV0FBTCxFQUFrQjtBQUNkYSxJQUFBQSxNQUFNLENBQUNHLElBQVAsQ0FBWTtBQUFDQyxNQUFBQSxJQUFJLEVBQUU7QUFBUCxLQUFaO0FBQ0g7O0FBRUQsTUFBSSxDQUFDaEIsb0JBQUwsRUFBMkI7QUFDdkJZLElBQUFBLE1BQU0sQ0FBQ0csSUFBUCxDQUFZO0FBQUNDLE1BQUFBLElBQUksRUFBRTtBQUFQLEtBQVo7QUFDSDs7QUFDRCxNQUFJLENBQUNmLFNBQUwsRUFBZ0I7QUFDZFcsSUFBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVk7QUFBQ0MsTUFBQUEsSUFBSSxFQUFFO0FBQVAsS0FBWjtBQUNEOztBQUVELE1BQUdKLE1BQU0sQ0FBQ0MsTUFBUCxHQUFnQixDQUFuQixFQUFzQjtBQUNsQmxCLElBQUFBLEdBQUcsQ0FBQ3NCLE1BQUosQ0FBVyxNQUFYLEVBQW1CO0FBQUNMLE1BQUFBLE1BQU0sRUFBTkEsTUFBRDtBQUFRZixNQUFBQSxNQUFNLEVBQU5BLE1BQVI7QUFBZUMsTUFBQUEsTUFBTSxFQUFOQSxNQUFmO0FBQXNCQyxNQUFBQSxXQUFXLEVBQVhBLFdBQXRCO0FBQWtDQyxNQUFBQSxvQkFBb0IsRUFBcEJBLG9CQUFsQztBQUF1REMsTUFBQUEsU0FBUyxFQUFUQSxTQUF2RDtBQUFpRUMsTUFBQUEsU0FBUyxFQUFUQSxTQUFqRTtBQUEyRUMsTUFBQUEsT0FBTyxFQUFQQSxPQUEzRTtBQUFtRkMsTUFBQUEsY0FBYyxFQUFkQSxjQUFuRjtBQUFrR0MsTUFBQUEsZ0JBQWdCLEVBQWhCQSxnQkFBbEc7QUFBbUhDLE1BQUFBLFFBQVEsRUFBUkEsUUFBbkg7QUFBNEhDLE1BQUFBLEdBQUcsRUFBSEEsR0FBNUg7QUFBZ0lDLE1BQUFBLGFBQWEsRUFBYkEsYUFBaEk7QUFBOElDLE1BQUFBLG1CQUFtQixFQUFuQkEsbUJBQTlJO0FBQWtLQyxNQUFBQSxNQUFNLEVBQU5BLE1BQWxLO0FBQXlLQyxNQUFBQSxLQUFLLEVBQUxBO0FBQXpLLEtBQW5CO0FBQ0gsR0F2QmtDLENBd0JsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNKO0FBQ0E7OztBQUNBTyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVAsTUFBWjtBQUNBTSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWXpCLEdBQUcsQ0FBQ0UsSUFBaEIsRUFsQ3NDLENBbUN0QztBQUNDOztBQUFBIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcc2lsZW50LXNuYWtlMjdcXERlc2t0b3BcXHJlZ2lzdHJvLWFwcC1jYXB0dXJlXFxzcmNcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2F2ZXNvY2lvREIgKHJlcSxyZXMpIHtcclxuLy8gIGNvbnN0IGRhdGEgPSByZXEuYm9keTtcclxuIGNvbnN0IHtOb21icmUsQ2VkdWxhLEVzdGFkb0NpdmlsLERpcmVjY2lvblJlc2lkZW5jaWFsLFByb3ZpbmNpYSxUZWxlZm9ub3MsQ2VsdWxhcixPZmljaW5hVHJhYmFqbyxEaXJlY2Npb25UcmFiYWpvLFRlbGVmb25vLEZheCxQdWVzdG9UcmFiYWpvLEZlY2hhSW5ncmVzb0VtcHJlc2EsU3VlbGRvLEVtYWlsfSA9IHJlcS5ib2R5O1xyXG4gbGV0IGVycm9ycyA9IFtdO1xyXG4gICBpZiAodHlwZW9mIE5vbWJyZSA9PT0gJ3N0cmluZycgJiYgTm9tYnJlLmxlbmd0aCA+PTIgJiYgL15bYS16XSskL2kudGVzdChOb21icmUpKSB7XHJcbiAgICAgZXJyb3JzLnB1c2goe3RleHQ6ICdDZWR1bGEgc29sbyBwdWVkZSBsbGV2YXIgY2FyYWN0ZXJlcyBudW1lcmljb3MnfSk7XHJcbiAgIH1cclxuICAgaWYgKHR5cGVvZiBDZWR1bGEgPT09ICdudW1iZXInICYmIENlZHVsYS5sZW5ndGggPj01ICYmIC9eWzEtLTldKyQvaS50ZXN0KENlZHVsYSkpIHtcclxuICAgICAgIGVycm9ycy5wdXNoKHt0ZXh0OiAnQ2VkdWxhIHNvbG8gcHVlZGUgbGxldmFyIGNhcmFjdGVyZXMgbnVtZXJpY29zJ30pO1xyXG4gICB9XHJcbiAgIGlmICghRXN0YWRvQ2l2aWwpIHtcclxuICAgICAgIGVycm9ycy5wdXNoKHt0ZXh0OiAnUG9yIGZhdm9yIHNlbGVjY2lvbmUgc3UgRXN0YWRvIENpdmlsJ30pO1xyXG4gICB9XHJcblxyXG4gICBpZiAoIURpcmVjY2lvblJlc2lkZW5jaWFsKSB7XHJcbiAgICAgICBlcnJvcnMucHVzaCh7dGV4dDogJ0VsIHNpZ3VpZW50ZSBjYW1wbyBlc3RhIHZhY2lvOiBEaXJlY2Npw7NuIFJlc2lkZW5jaWFsJ30pO1xyXG4gICB9XHJcbiAgIGlmICghUHJvdmluY2lhKSB7XHJcbiAgICAgZXJyb3JzLnB1c2goe3RleHQ6ICdFbCBzaWd1aWVudGUgY2FtcG8gZXN0YSB2YWNpbzogRGlyZWNjacOzbiBSZXNpZGVuY2lhbCd9KTtcclxuICAgfVxyXG5cclxuICAgaWYoZXJyb3JzLmxlbmd0aCA+IDApIHtcclxuICAgICAgIHJlcy5yZW5kZXIoJ2Zvcm0nLCB7ZXJyb3JzLE5vbWJyZSxDZWR1bGEsRXN0YWRvQ2l2aWwsRGlyZWNjaW9uUmVzaWRlbmNpYWwsUHJvdmluY2lhLFRlbGVmb25vcyxDZWx1bGFyLE9maWNpbmFUcmFiYWpvLERpcmVjY2lvblRyYWJham8sVGVsZWZvbm8sRmF4LFB1ZXN0b1RyYWJham8sRmVjaGFJbmdyZXNvRW1wcmVzYSxTdWVsZG8sRW1haWx9KTtcclxuICAgfVxyXG4gICAgLy8gIH1lbHNlIHtcclxuICAgIC8vICAgIGNvbnN0IHNvY2lvTmFtZSA9IGF3YWl0IFNvY2lvLmZpbmRPbmUoe05vbWJyZTogTm9tYnJlfSk7XHJcbiAgICAvLyAgICBpZiAoc29jaW9OYW1lKSB7XHJcbiAgICAvLyAgICAgIHJlcS5mbGFzaCgnZXJyb3InLCAnRWwgY29ycmVvIHlhIGVzdGEgZW4gdXNvJyk7XHJcbiAgICAvLyAgICAgIHJlcy5yZWRpcmVjdCgnL3VzZXJzL3NpZ251cCcpO1xyXG4gICAgLy8gICAgfVxyXG4gICAgLy8gIH1cclxuLy8gIGF3YWl0IHBvb2wucXVlcnkoICdJTlNFUlQgSU5UTyBudWV2b3Nfc29jaW9zIHNldCA/JywgW2RhdGFdKTtcclxuLy8gIGF3YWl0IHBvb2wucXVlcnkoICdJTlNFUlQgSU5UTyBkYXRhX3JlZ2lzdGVyIHNldCA/JywgW2RhdGFdKTtcclxuY29uc29sZS5sb2coZXJyb3JzKTtcclxuY29uc29sZS5sb2cocmVxLmJvZHkpO1xyXG4vLyByZXMuc2VuZCgncmVjZWl2ZWQnKTtcclxufTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "controller_socio.js"
      ],
      "names": [
        "savesocioDB",
        "req",
        "res",
        "body",
        "Nombre",
        "Cedula",
        "EstadoCivil",
        "DireccionResidencial",
        "Provincia",
        "Telefonos",
        "Celular",
        "OficinaTrabajo",
        "DireccionTrabajo",
        "Telefono",
        "Fax",
        "PuestoTrabajo",
        "FechaIngresoEmpresa",
        "Sueldo",
        "Email",
        "errors",
        "length",
        "test",
        "push",
        "text",
        "render",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAEO,SAASA,WAAT,CAAsBC,GAAtB,EAA0BC,GAA1B,EAA+B;AACtC;AADsC,kBAE4ID,GAAG,CAACE,IAFhJ;AAAA,MAE9BC,MAF8B,aAE9BA,MAF8B;AAAA,MAEvBC,MAFuB,aAEvBA,MAFuB;AAAA,MAEhBC,WAFgB,aAEhBA,WAFgB;AAAA,MAEJC,oBAFI,aAEJA,oBAFI;AAAA,MAEiBC,SAFjB,aAEiBA,SAFjB;AAAA,MAE2BC,SAF3B,aAE2BA,SAF3B;AAAA,MAEqCC,OAFrC,aAEqCA,OAFrC;AAAA,MAE6CC,cAF7C,aAE6CA,cAF7C;AAAA,MAE4DC,gBAF5D,aAE4DA,gBAF5D;AAAA,MAE6EC,QAF7E,aAE6EA,QAF7E;AAAA,MAEsFC,GAFtF,aAEsFA,GAFtF;AAAA,MAE0FC,aAF1F,aAE0FA,aAF1F;AAAA,MAEwGC,mBAFxG,aAEwGA,mBAFxG;AAAA,MAE4HC,MAF5H,aAE4HA,MAF5H;AAAA,MAEmIC,KAFnI,aAEmIA,KAFnI;AAGrC,MAAIC,MAAM,GAAG,EAAb;;AACE,MAAI,OAAOf,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACgB,MAAP,IAAgB,CAA9C,IAAmD,YAAYC,IAAZ,CAAiBjB,MAAjB,CAAvD,EAAiF;AAC/Ee,IAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAZ;AACD;;AACD,MAAI,OAAOlB,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACe,MAAP,IAAgB,CAA9C,IAAmD,aAAaC,IAAb,CAAkBhB,MAAlB,CAAvD,EAAkF;AAC9Ec,IAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAZ;AACH;;AACD,MAAI,CAACjB,WAAL,EAAkB;AACda,IAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAZ;AACH;;AAED,MAAI,CAAChB,oBAAL,EAA2B;AACvBY,IAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAZ;AACH;;AACD,MAAI,CAACf,SAAL,EAAgB;AACdW,IAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAZ;AACD;;AAED,MAAGJ,MAAM,CAACC,MAAP,GAAgB,CAAnB,EAAsB;AAClBlB,IAAAA,GAAG,CAACsB,MAAJ,CAAW,MAAX,EAAmB;AAACL,MAAAA,MAAM,EAANA,MAAD;AAAQf,MAAAA,MAAM,EAANA,MAAR;AAAeC,MAAAA,MAAM,EAANA,MAAf;AAAsBC,MAAAA,WAAW,EAAXA,WAAtB;AAAkCC,MAAAA,oBAAoB,EAApBA,oBAAlC;AAAuDC,MAAAA,SAAS,EAATA,SAAvD;AAAiEC,MAAAA,SAAS,EAATA,SAAjE;AAA2EC,MAAAA,OAAO,EAAPA,OAA3E;AAAmFC,MAAAA,cAAc,EAAdA,cAAnF;AAAkGC,MAAAA,gBAAgB,EAAhBA,gBAAlG;AAAmHC,MAAAA,QAAQ,EAARA,QAAnH;AAA4HC,MAAAA,GAAG,EAAHA,GAA5H;AAAgIC,MAAAA,aAAa,EAAbA,aAAhI;AAA8IC,MAAAA,mBAAmB,EAAnBA,mBAA9I;AAAkKC,MAAAA,MAAM,EAANA,MAAlK;AAAyKC,MAAAA,KAAK,EAALA;AAAzK,KAAnB;AACH,GAvBkC,CAwBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;;;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYzB,GAAG,CAACE,IAAhB,EAlCsC,CAmCtC;AACC;;AAAA",
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers",
      "sourcesContent": [
        "\r\n\r\nexport function savesocioDB (req,res) {\r\n//  const data = req.body;\r\n const {Nombre,Cedula,EstadoCivil,DireccionResidencial,Provincia,Telefonos,Celular,OficinaTrabajo,DireccionTrabajo,Telefono,Fax,PuestoTrabajo,FechaIngresoEmpresa,Sueldo,Email} = req.body;\r\n let errors = [];\r\n   if (typeof Nombre === 'string' && Nombre.length >=2 && /^[a-z]+$/i.test(Nombre)) {\r\n     errors.push({text: 'Cedula solo puede llevar caracteres numericos'});\r\n   }\r\n   if (typeof Cedula === 'number' && Cedula.length >=5 && /^[1--9]+$/i.test(Cedula)) {\r\n       errors.push({text: 'Cedula solo puede llevar caracteres numericos'});\r\n   }\r\n   if (!EstadoCivil) {\r\n       errors.push({text: 'Por favor seleccione su Estado Civil'});\r\n   }\r\n\r\n   if (!DireccionResidencial) {\r\n       errors.push({text: 'El siguiente campo esta vacio: Dirección Residencial'});\r\n   }\r\n   if (!Provincia) {\r\n     errors.push({text: 'El siguiente campo esta vacio: Dirección Residencial'});\r\n   }\r\n\r\n   if(errors.length > 0) {\r\n       res.render('form', {errors,Nombre,Cedula,EstadoCivil,DireccionResidencial,Provincia,Telefonos,Celular,OficinaTrabajo,DireccionTrabajo,Telefono,Fax,PuestoTrabajo,FechaIngresoEmpresa,Sueldo,Email});\r\n   }\r\n    //  }else {\r\n    //    const socioName = await Socio.findOne({Nombre: Nombre});\r\n    //    if (socioName) {\r\n    //      req.flash('error', 'El correo ya esta en uso');\r\n    //      res.redirect('/users/signup');\r\n    //    }\r\n    //  }\r\n//  await pool.query( 'INSERT INTO nuevos_socios set ?', [data]);\r\n//  await pool.query( 'INSERT INTO data_register set ?', [data]);\r\nconsole.log(errors);\r\nconsole.log(req.body);\r\n// res.send('received');\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1565059690658
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"filename\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\controllers\\\\controller.socio.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers\\controller.socio.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers\\controller.socio.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers\\controller.socio.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers",
        "sourceFileName": "controller.socio.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.savesocioDB = savesocioDB;\n\nvar _request = _interopRequireDefault(require(\"request\"));\n\nvar _Data_register = _interopRequireDefault(require(\"../models/Data_register\"));\n\nvar _Nuevos_socios = _interopRequireDefault(require(\"../models/Nuevos_socios\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction savesocioDB(_x, _x2) {\n  return _savesocioDB.apply(this, arguments);\n}\n\nfunction _savesocioDB() {\n  _savesocioDB = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var captcha, secretKey, verifyURL, _req$body, nombre, apellido, cedula, estadocivil, direccionresidencial, provincia, telefonos, celular, oficinatrabajo, direcciontrabajo, telefonotrabajo, fax, puesto, sueldo, fechaingresoempresa, email, ahorromensual, certificadoaportacion, valorcertificado, nombre2, cedula2, errors, dataName, data;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            captcha = req.body['g-recaptcha-response']; // Secret Key\n\n            secretKey = '6Lc7Q7MUAAAAAOiHyEwkMOxgJvSv1sF9avSLEOs6'; // Verify URL\n\n            verifyURL = \"https://www.google.com/recaptcha/api/siteverify?secret=\".concat(secretKey, \"&response=\").concat(captcha, \"&remoteip=\").concat(req.connection.remoteAddress); // if(req.body['g-recaptcha-response'] === undefined || req.body['g-recaptcha-response'] === '' || req.body['g-recaptcha-response'] === null)\n            // {\n            //  req.flash(\"error\", \"Captcha Failed\");\n            // }\n            // Make Request To VerifyURL\n\n            (0, _request[\"default\"])(verifyURL, function (err, response, body) {\n              body = JSON.parse(body);\n              console.log(body); // // if not successful\n              // if(body.success !== undefined && !body.success){\n              //   req.flash(\"error\", \"Captcha Failed\");\n              //   return res.redirect(\"/\");\n              // }\n              // //If Successful\n              // return res.json({\"success\": true, \"msg\":\"Captcha passed\"});\n            });\n            _req$body = req.body, nombre = _req$body.nombre, apellido = _req$body.apellido, cedula = _req$body.cedula, estadocivil = _req$body.estadocivil, direccionresidencial = _req$body.direccionresidencial, provincia = _req$body.provincia, telefonos = _req$body.telefonos, celular = _req$body.celular, oficinatrabajo = _req$body.oficinatrabajo, direcciontrabajo = _req$body.direcciontrabajo, telefonotrabajo = _req$body.telefonotrabajo, fax = _req$body.fax, puesto = _req$body.puesto, sueldo = _req$body.sueldo, fechaingresoempresa = _req$body.fechaingresoempresa, email = _req$body.email, ahorromensual = _req$body.ahorromensual, certificadoaportacion = _req$body.certificadoaportacion, valorcertificado = _req$body.valorcertificado, nombre2 = _req$body.nombre2, cedula2 = _req$body.cedula2;\n            errors = [];\n\n            if (typeof nombre === 'string' && nombre.lenght <= 3 && /^[a-z]+$/i.test(nombre)) {\n              errors.push({\n                text: 'El Nombre debe de tener más de 3 caracteres'\n              });\n            }\n\n            if (typeof apellido === 'string' && apellido.lenght <= 3 && /^[a-z]+$/i.test(apellido)) {\n              errors.push({\n                text: 'El Apellido debe de tener más de 3 caracteres'\n              });\n            }\n\n            if (typeof cedula === 'isNaN' && cedula.lenght <= 5 && /^[0-9]+$/i.test(cedula)) {\n              errors.push({\n                text: 'Cedula solo puede llevar caracteres númericos'\n              });\n            }\n\n            if (!estadocivil) {\n              errors.push({\n                text: 'Por favor Seleccione su Estado Civil'\n              });\n            }\n\n            if (direccionresidencial.length <= 0) {\n              errors.push({\n                text: 'El siguiente campo esta vacio: Dirección Residencial'\n              });\n            }\n\n            if (provincia.length <= 0) {\n              errors.push({\n                text: 'El siguiente campo esta vacio: Provincia'\n              });\n            }\n\n            if (telefonos.length < 8) {\n              errors.push({\n                text: 'El Telefono debe de tener por lo menos 8 Digitos'\n              });\n            }\n\n            if (celular.length < 8) {\n              errors.push({\n                text: 'El Celular debe de tener por lo menos 8 Digitos'\n              });\n            }\n\n            if (oficinatrabajo.length <= 0) {\n              errors.push({\n                text: 'El siguiente campo esta vacio: Oficina de Trabajo'\n              });\n            }\n\n            if (direcciontrabajo.length <= 0) {\n              errors.push({\n                text: 'El siguiente campo esta vacio: Dirección de Trabajo'\n              });\n            }\n\n            if (telefonotrabajo.length < 8) {\n              errors.push({\n                text: 'El Telefono del Trabajo debe de tener por lo menos 8 Digitos'\n              });\n            }\n\n            if (fechaingresoempresa.length <= 0) {\n              errors.push({\n                text: 'El siguiente campo esta vacio: Fecha de Ingreso Empresa'\n              });\n            }\n\n            if (fax.length <= 0) {\n              errors.push({\n                text: 'El siguiente campo esta vacio: Fax'\n              });\n            }\n\n            if (puesto.length <= 0) {\n              errors.push({\n                text: 'El siguiente campo esta vacio: Puesto'\n              });\n            }\n\n            if (sueldo.length <= 0) {\n              errors.push({\n                text: 'El siguiente campo esta vacio: Sueldo'\n              });\n            }\n\n            if (email.length <= 0) {\n              errors.push({\n                text: 'El siguiente campo esta vacio: Correo Electrónico'\n              });\n            }\n\n            if (!(errors.length > 0)) {\n              _context.next = 26;\n              break;\n            }\n\n            res.render('form', {\n              errors: errors,\n              nombre: nombre,\n              apellido: apellido,\n              cedula: cedula,\n              direccionresidencial: direccionresidencial,\n              telefonos: telefonos,\n              celular: celular,\n              oficinatrabajo: oficinatrabajo,\n              direcciontrabajo: direcciontrabajo,\n              telefonotrabajo: telefonotrabajo,\n              fax: fax,\n              puesto: puesto,\n              fechaingresoempresa: fechaingresoempresa,\n              sueldo: sueldo,\n              email: email,\n              nombre2: nombre2,\n              cedula2: cedula2\n            });\n            _context.next = 42;\n            break;\n\n          case 26:\n            _context.prev = 26;\n            _context.next = 29;\n            return _Nuevos_socios[\"default\"].create({\n              nombre: nombre,\n              apellido: apellido\n            });\n\n          case 29:\n            dataName = _context.sent;\n            _context.next = 32;\n            return _Data_register[\"default\"].create({\n              nombre: nombre,\n              apellido: apellido,\n              cedula: cedula,\n              estadocivil: estadocivil,\n              direccionresidencial: direccionresidencial,\n              provincia: provincia,\n              telefonos: telefonos,\n              celular: celular,\n              oficinatrabajo: oficinatrabajo,\n              direcciontrabajo: direcciontrabajo,\n              telefonotrabajo: telefonotrabajo,\n              fax: fax,\n              puesto: puesto,\n              sueldo: sueldo,\n              fechaingresoempresa: fechaingresoempresa,\n              email: email,\n              ahorromensual: ahorromensual,\n              certificadoaportacion: certificadoaportacion,\n              valorcertificado: valorcertificado,\n              nombre2: nombre2,\n              cedula2: cedula2\n            });\n\n          case 32:\n            data = _context.sent;\n\n            if (data) {\n              res.redirect('/');\n            }\n\n            _context.next = 40;\n            break;\n\n          case 36:\n            _context.prev = 36;\n            _context.t0 = _context[\"catch\"](26);\n            console.log(_context.t0);\n            res.status(500).json({\n              message: 'Algo ha ido Mal',\n              data: {}\n            }); // res.redirect('/');\n\n          case 40:\n            ;\n            console.log(verifyURL);\n\n          case 42:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[26, 36]]);\n  }));\n  return _savesocioDB.apply(this, arguments);\n}\n\n; //     // fields: ['nombre', 'cedula', 'estadocivil', 'direccionresidencial', 'provincia', 'telefonos', 'celular', 'oficinatrabajo', 'direcciontrabajo', 'telefono', 'fax', 'puestotrabajo', 'fechaingresoempresa', 'sueldo', 'email']\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXIuc29jaW8uanMiXSwibmFtZXMiOlsic2F2ZXNvY2lvREIiLCJyZXEiLCJyZXMiLCJjYXB0Y2hhIiwiYm9keSIsInNlY3JldEtleSIsInZlcmlmeVVSTCIsImNvbm5lY3Rpb24iLCJyZW1vdGVBZGRyZXNzIiwiZXJyIiwicmVzcG9uc2UiLCJKU09OIiwicGFyc2UiLCJjb25zb2xlIiwibG9nIiwibm9tYnJlIiwiYXBlbGxpZG8iLCJjZWR1bGEiLCJlc3RhZG9jaXZpbCIsImRpcmVjY2lvbnJlc2lkZW5jaWFsIiwicHJvdmluY2lhIiwidGVsZWZvbm9zIiwiY2VsdWxhciIsIm9maWNpbmF0cmFiYWpvIiwiZGlyZWNjaW9udHJhYmFqbyIsInRlbGVmb25vdHJhYmFqbyIsImZheCIsInB1ZXN0byIsInN1ZWxkbyIsImZlY2hhaW5ncmVzb2VtcHJlc2EiLCJlbWFpbCIsImFob3Jyb21lbnN1YWwiLCJjZXJ0aWZpY2Fkb2Fwb3J0YWNpb24iLCJ2YWxvcmNlcnRpZmljYWRvIiwibm9tYnJlMiIsImNlZHVsYTIiLCJlcnJvcnMiLCJsZW5naHQiLCJ0ZXN0IiwicHVzaCIsInRleHQiLCJsZW5ndGgiLCJyZW5kZXIiLCJudWV2b1NvY2lvcyIsImNyZWF0ZSIsImRhdGFOYW1lIiwiRGF0YVJlZ2lzdGVyIiwiZGF0YSIsInJlZGlyZWN0Iiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7U0FDc0JBLFc7Ozs7Ozs7MEJBQWYsaUJBQTRCQyxHQUE1QixFQUFnQ0MsR0FBaEM7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVDQyxZQUFBQSxPQUZELEdBRVdGLEdBQUcsQ0FBQ0csSUFBSixDQUFTLHNCQUFULENBRlgsRUFHTDs7QUFDTUMsWUFBQUEsU0FKRCxHQUlhLDBDQUpiLEVBS0w7O0FBQ0lDLFlBQUFBLFNBTkMsb0VBTXFFRCxTQU5yRSx1QkFNMkZGLE9BTjNGLHVCQU0rR0YsR0FBRyxDQUFDTSxVQUFKLENBQWVDLGFBTjlILEdBUUw7QUFDQTtBQUNBO0FBQ0E7QUFFQzs7QUFDSCxxQ0FBUUYsU0FBUixFQUFtQixVQUFDRyxHQUFELEVBQU1DLFFBQU4sRUFBZ0JOLElBQWhCLEVBQXlCO0FBQzFDQSxjQUFBQSxJQUFJLEdBQUdPLElBQUksQ0FBQ0MsS0FBTCxDQUFXUixJQUFYLENBQVA7QUFDQVMsY0FBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlWLElBQVosRUFGMEMsQ0FJeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdGO0FBQ0E7QUFDRCxhQWJEO0FBZE8sd0JBOEJ5UEgsR0FBRyxDQUFDRyxJQTlCN1AsRUE4QkNXLE1BOUJELGFBOEJDQSxNQTlCRCxFQThCUUMsUUE5QlIsYUE4QlFBLFFBOUJSLEVBOEJpQkMsTUE5QmpCLGFBOEJpQkEsTUE5QmpCLEVBOEJ3QkMsV0E5QnhCLGFBOEJ3QkEsV0E5QnhCLEVBOEJvQ0Msb0JBOUJwQyxhQThCb0NBLG9CQTlCcEMsRUE4QnlEQyxTQTlCekQsYUE4QnlEQSxTQTlCekQsRUE4Qm1FQyxTQTlCbkUsYUE4Qm1FQSxTQTlCbkUsRUE4QjZFQyxPQTlCN0UsYUE4QjZFQSxPQTlCN0UsRUE4QnFGQyxjQTlCckYsYUE4QnFGQSxjQTlCckYsRUE4Qm9HQyxnQkE5QnBHLGFBOEJvR0EsZ0JBOUJwRyxFQThCcUhDLGVBOUJySCxhQThCcUhBLGVBOUJySCxFQThCcUlDLEdBOUJySSxhQThCcUlBLEdBOUJySSxFQThCeUlDLE1BOUJ6SSxhQThCeUlBLE1BOUJ6SSxFQThCZ0pDLE1BOUJoSixhQThCZ0pBLE1BOUJoSixFQThCdUpDLG1CQTlCdkosYUE4QnVKQSxtQkE5QnZKLEVBOEIyS0MsS0E5QjNLLGFBOEIyS0EsS0E5QjNLLEVBOEJpTEMsYUE5QmpMLGFBOEJpTEEsYUE5QmpMLEVBOEIrTEMscUJBOUIvTCxhQThCK0xBLHFCQTlCL0wsRUE4QnFOQyxnQkE5QnJOLGFBOEJxTkEsZ0JBOUJyTixFQThCc09DLE9BOUJ0TyxhQThCc09BLE9BOUJ0TyxFQThCOE9DLE9BOUI5TyxhQThCOE9BLE9BOUI5TztBQStCRkMsWUFBQUEsTUEvQkUsR0ErQk8sRUEvQlA7O0FBZ0NKLGdCQUFJLE9BQU9yQixNQUFQLEtBQWtCLFFBQWxCLElBQThCQSxNQUFNLENBQUNzQixNQUFQLElBQWdCLENBQTlDLElBQW1ELFlBQVlDLElBQVosQ0FBaUJ2QixNQUFqQixDQUF2RCxFQUFpRjtBQUMvRXFCLGNBQUFBLE1BQU0sQ0FBQ0csSUFBUCxDQUFZO0FBQUNDLGdCQUFBQSxJQUFJLEVBQUU7QUFBUCxlQUFaO0FBQ0Q7O0FBQ0QsZ0JBQUksT0FBT3hCLFFBQVAsS0FBb0IsUUFBcEIsSUFBZ0NBLFFBQVEsQ0FBQ3FCLE1BQVQsSUFBa0IsQ0FBbEQsSUFBdUQsWUFBWUMsSUFBWixDQUFpQnRCLFFBQWpCLENBQTNELEVBQXVGO0FBQ3JGb0IsY0FBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVk7QUFBQ0MsZ0JBQUFBLElBQUksRUFBRTtBQUFQLGVBQVo7QUFDRDs7QUFDRCxnQkFBSSxPQUFPdkIsTUFBUCxLQUFrQixPQUFsQixJQUE2QkEsTUFBTSxDQUFDb0IsTUFBUCxJQUFnQixDQUE3QyxJQUFrRCxZQUFZQyxJQUFaLENBQWlCckIsTUFBakIsQ0FBdEQsRUFBZ0Y7QUFDNUVtQixjQUFBQSxNQUFNLENBQUNHLElBQVAsQ0FBWTtBQUFDQyxnQkFBQUEsSUFBSSxFQUFFO0FBQVAsZUFBWjtBQUNIOztBQUNELGdCQUFJLENBQUN0QixXQUFMLEVBQWtCO0FBQ2RrQixjQUFBQSxNQUFNLENBQUNHLElBQVAsQ0FBWTtBQUFDQyxnQkFBQUEsSUFBSSxFQUFFO0FBQVAsZUFBWjtBQUNIOztBQUVELGdCQUFJckIsb0JBQW9CLENBQUNzQixNQUFyQixJQUErQixDQUFuQyxFQUFzQztBQUNwQ0wsY0FBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVk7QUFBQ0MsZ0JBQUFBLElBQUksRUFBRTtBQUFQLGVBQVo7QUFDQTs7QUFDRCxnQkFBSXBCLFNBQVMsQ0FBQ3FCLE1BQVYsSUFBb0IsQ0FBeEIsRUFBMkI7QUFDMUJMLGNBQUFBLE1BQU0sQ0FBQ0csSUFBUCxDQUFZO0FBQUNDLGdCQUFBQSxJQUFJLEVBQUU7QUFBUCxlQUFaO0FBQ0E7O0FBQ0QsZ0JBQUluQixTQUFTLENBQUNvQixNQUFWLEdBQW1CLENBQXZCLEVBQTBCO0FBQ3hCTCxjQUFBQSxNQUFNLENBQUNHLElBQVAsQ0FBWTtBQUFDQyxnQkFBQUEsSUFBSSxFQUFFO0FBQVAsZUFBWjtBQUNEOztBQUNELGdCQUFJbEIsT0FBTyxDQUFDbUIsTUFBUixHQUFpQixDQUFyQixFQUF3QjtBQUN0QkwsY0FBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVk7QUFBQ0MsZ0JBQUFBLElBQUksRUFBRTtBQUFQLGVBQVo7QUFDRDs7QUFDRCxnQkFBSWpCLGNBQWMsQ0FBQ2tCLE1BQWYsSUFBeUIsQ0FBN0IsRUFBZ0M7QUFDOUJMLGNBQUFBLE1BQU0sQ0FBQ0csSUFBUCxDQUFZO0FBQUNDLGdCQUFBQSxJQUFJLEVBQUU7QUFBUCxlQUFaO0FBQ0Q7O0FBQ0QsZ0JBQUloQixnQkFBZ0IsQ0FBQ2lCLE1BQWpCLElBQTJCLENBQS9CLEVBQWtDO0FBQ2hDTCxjQUFBQSxNQUFNLENBQUNHLElBQVAsQ0FBWTtBQUFDQyxnQkFBQUEsSUFBSSxFQUFFO0FBQVAsZUFBWjtBQUNEOztBQUNELGdCQUFJZixlQUFlLENBQUNnQixNQUFoQixHQUF5QixDQUE3QixFQUFnQztBQUM5QkwsY0FBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVk7QUFBQ0MsZ0JBQUFBLElBQUksRUFBRTtBQUFQLGVBQVo7QUFDRDs7QUFDRCxnQkFBSVgsbUJBQW1CLENBQUNZLE1BQXBCLElBQThCLENBQWxDLEVBQXFDO0FBQ25DTCxjQUFBQSxNQUFNLENBQUNHLElBQVAsQ0FBWTtBQUFDQyxnQkFBQUEsSUFBSSxFQUFFO0FBQVAsZUFBWjtBQUNEOztBQUNELGdCQUFJZCxHQUFHLENBQUNlLE1BQUosSUFBYyxDQUFsQixFQUFxQjtBQUNuQkwsY0FBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVk7QUFBQ0MsZ0JBQUFBLElBQUksRUFBRTtBQUFQLGVBQVo7QUFDRDs7QUFDRCxnQkFBSWIsTUFBTSxDQUFDYyxNQUFQLElBQWlCLENBQXJCLEVBQXdCO0FBQ3RCTCxjQUFBQSxNQUFNLENBQUNHLElBQVAsQ0FBWTtBQUFDQyxnQkFBQUEsSUFBSSxFQUFFO0FBQVAsZUFBWjtBQUNEOztBQUNELGdCQUFJWixNQUFNLENBQUNhLE1BQVAsSUFBaUIsQ0FBckIsRUFBd0I7QUFDdEJMLGNBQUFBLE1BQU0sQ0FBQ0csSUFBUCxDQUFZO0FBQUNDLGdCQUFBQSxJQUFJLEVBQUU7QUFBUCxlQUFaO0FBQ0Q7O0FBQ0QsZ0JBQUlWLEtBQUssQ0FBQ1csTUFBTixJQUFnQixDQUFwQixFQUF1QjtBQUNyQkwsY0FBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVk7QUFBQ0MsZ0JBQUFBLElBQUksRUFBRTtBQUFQLGVBQVo7QUFDRDs7QUFoRkUsa0JBcUZBSixNQUFNLENBQUNLLE1BQVAsR0FBZ0IsQ0FyRmhCO0FBQUE7QUFBQTtBQUFBOztBQXNGRHZDLFlBQUFBLEdBQUcsQ0FBQ3dDLE1BQUosQ0FBVyxNQUFYLEVBQW1CO0FBQUNOLGNBQUFBLE1BQU0sRUFBTkEsTUFBRDtBQUFRckIsY0FBQUEsTUFBTSxFQUFOQSxNQUFSO0FBQWVDLGNBQUFBLFFBQVEsRUFBUkEsUUFBZjtBQUF3QkMsY0FBQUEsTUFBTSxFQUFOQSxNQUF4QjtBQUErQkUsY0FBQUEsb0JBQW9CLEVBQXBCQSxvQkFBL0I7QUFBb0RFLGNBQUFBLFNBQVMsRUFBVEEsU0FBcEQ7QUFBOERDLGNBQUFBLE9BQU8sRUFBUEEsT0FBOUQ7QUFBc0VDLGNBQUFBLGNBQWMsRUFBZEEsY0FBdEU7QUFBcUZDLGNBQUFBLGdCQUFnQixFQUFoQkEsZ0JBQXJGO0FBQXNHQyxjQUFBQSxlQUFlLEVBQWZBLGVBQXRHO0FBQXNIQyxjQUFBQSxHQUFHLEVBQUhBLEdBQXRIO0FBQTBIQyxjQUFBQSxNQUFNLEVBQU5BLE1BQTFIO0FBQWlJRSxjQUFBQSxtQkFBbUIsRUFBbkJBLG1CQUFqSTtBQUFxSkQsY0FBQUEsTUFBTSxFQUFOQSxNQUFySjtBQUE0SkUsY0FBQUEsS0FBSyxFQUFMQSxLQUE1SjtBQUFrS0ksY0FBQUEsT0FBTyxFQUFQQSxPQUFsSztBQUEwS0MsY0FBQUEsT0FBTyxFQUFQQTtBQUExSyxhQUFuQjtBQXRGQztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQTJGc0JRLDBCQUFZQyxNQUFaLENBQW1CO0FBRTFDN0IsY0FBQUEsTUFBTSxFQUFOQSxNQUYwQztBQUcxQ0MsY0FBQUEsUUFBUSxFQUFSQTtBQUgwQyxhQUFuQixDQTNGdEI7O0FBQUE7QUEyRks2QixZQUFBQSxRQTNGTDtBQUFBO0FBQUEsbUJBaUdrQkMsMEJBQWFGLE1BQWIsQ0FBb0I7QUFFdkM3QixjQUFBQSxNQUFNLEVBQU5BLE1BRnVDO0FBR3ZDQyxjQUFBQSxRQUFRLEVBQVJBLFFBSHVDO0FBSXZDQyxjQUFBQSxNQUFNLEVBQU5BLE1BSnVDO0FBS3ZDQyxjQUFBQSxXQUFXLEVBQVhBLFdBTHVDO0FBTXZDQyxjQUFBQSxvQkFBb0IsRUFBcEJBLG9CQU51QztBQU92Q0MsY0FBQUEsU0FBUyxFQUFUQSxTQVB1QztBQVF2Q0MsY0FBQUEsU0FBUyxFQUFUQSxTQVJ1QztBQVN2Q0MsY0FBQUEsT0FBTyxFQUFQQSxPQVR1QztBQVV2Q0MsY0FBQUEsY0FBYyxFQUFkQSxjQVZ1QztBQVd2Q0MsY0FBQUEsZ0JBQWdCLEVBQWhCQSxnQkFYdUM7QUFZdkNDLGNBQUFBLGVBQWUsRUFBZkEsZUFadUM7QUFhdkNDLGNBQUFBLEdBQUcsRUFBSEEsR0FidUM7QUFjdkNDLGNBQUFBLE1BQU0sRUFBTkEsTUFkdUM7QUFldkNDLGNBQUFBLE1BQU0sRUFBTkEsTUFmdUM7QUFnQnZDQyxjQUFBQSxtQkFBbUIsRUFBbkJBLG1CQWhCdUM7QUFpQnZDQyxjQUFBQSxLQUFLLEVBQUxBLEtBakJ1QztBQWtCdkNDLGNBQUFBLGFBQWEsRUFBYkEsYUFsQnVDO0FBbUJ2Q0MsY0FBQUEscUJBQXFCLEVBQXJCQSxxQkFuQnVDO0FBb0J2Q0MsY0FBQUEsZ0JBQWdCLEVBQWhCQSxnQkFwQnVDO0FBcUJ2Q0MsY0FBQUEsT0FBTyxFQUFQQSxPQXJCdUM7QUFzQnZDQyxjQUFBQSxPQUFPLEVBQVBBO0FBdEJ1QyxhQUFwQixDQWpHbEI7O0FBQUE7QUFpR0tZLFlBQUFBLElBakdMOztBQTRIQyxnQkFBSUEsSUFBSixFQUFVO0FBRVI3QyxjQUFBQSxHQUFHLENBQUM4QyxRQUFKLENBQWEsR0FBYjtBQUNEOztBQS9IRjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQWtJR25DLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQUNBWixZQUFBQSxHQUFHLENBQUMrQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJDLGNBQUFBLE9BQU8sRUFBRSxpQkFEUTtBQUVyQkosY0FBQUEsSUFBSSxFQUFFO0FBRmUsYUFBckIsRUFuSUgsQ0F1SUM7O0FBdklEO0FBd0lBO0FBQ0hsQyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVIsU0FBWjs7QUF6SUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRzs7OztBQTJJTixDLENBQ0QiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxzaWxlbnQtc25ha2UyN1xcRGVza3RvcFxccmVnaXN0cm8tYXBwLWNhcHR1cmVcXHNyY1xcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVxdWVzdCBmcm9tICdyZXF1ZXN0JztcclxuaW1wb3J0IERhdGFSZWdpc3RlciBmcm9tICAnLi4vbW9kZWxzL0RhdGFfcmVnaXN0ZXInO1xyXG5pbXBvcnQgbnVldm9Tb2Npb3MgZnJvbSAnLi4vbW9kZWxzL051ZXZvc19zb2Npb3MnO1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2F2ZXNvY2lvREIgKHJlcSxyZXMpIHtcclxuXHJcbiAgY29uc3QgY2FwdGNoYSA9IHJlcS5ib2R5WydnLXJlY2FwdGNoYS1yZXNwb25zZSddO1xyXG4gIC8vIFNlY3JldCBLZXlcclxuICBjb25zdCBzZWNyZXRLZXkgPSAnNkxjN1E3TVVBQUFBQU9pSHlFd2tNT3hnSnZTdjFzRjlhdlNMRU9zNic7XHJcbiAgLy8gVmVyaWZ5IFVSTFxyXG4gIHZhciB2ZXJpZnlVUkwgPSBgaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9yZWNhcHRjaGEvYXBpL3NpdGV2ZXJpZnk/c2VjcmV0PSR7c2VjcmV0S2V5fSZyZXNwb25zZT0ke2NhcHRjaGF9JnJlbW90ZWlwPSR7cmVxLmNvbm5lY3Rpb24ucmVtb3RlQWRkcmVzc31gO1xyXG5cclxuICAvLyBpZihyZXEuYm9keVsnZy1yZWNhcHRjaGEtcmVzcG9uc2UnXSA9PT0gdW5kZWZpbmVkIHx8IHJlcS5ib2R5WydnLXJlY2FwdGNoYS1yZXNwb25zZSddID09PSAnJyB8fCByZXEuYm9keVsnZy1yZWNhcHRjaGEtcmVzcG9uc2UnXSA9PT0gbnVsbClcclxuICAvLyB7XHJcbiAgLy8gIHJlcS5mbGFzaChcImVycm9yXCIsIFwiQ2FwdGNoYSBGYWlsZWRcIik7XHJcbiAgLy8gfVxyXG5cclxuICAgLy8gTWFrZSBSZXF1ZXN0IFRvIFZlcmlmeVVSTFxyXG5yZXF1ZXN0KHZlcmlmeVVSTCwgKGVyciwgcmVzcG9uc2UsIGJvZHkpID0+IHtcclxuICBib2R5ID0gSlNPTi5wYXJzZShib2R5KTtcclxuICBjb25zb2xlLmxvZyhib2R5KTtcclxuXHJcbiAgICAvLyAvLyBpZiBub3Qgc3VjY2Vzc2Z1bFxyXG4gICAgLy8gaWYoYm9keS5zdWNjZXNzICE9PSB1bmRlZmluZWQgJiYgIWJvZHkuc3VjY2Vzcyl7XHJcbiAgICAvLyAgIHJlcS5mbGFzaChcImVycm9yXCIsIFwiQ2FwdGNoYSBGYWlsZWRcIik7XHJcbiAgICAvLyAgIHJldHVybiByZXMucmVkaXJlY3QoXCIvXCIpO1xyXG4gICAgLy8gfVxyXG5cclxuXHJcbiAgLy8gLy9JZiBTdWNjZXNzZnVsXHJcbiAgLy8gcmV0dXJuIHJlcy5qc29uKHtcInN1Y2Nlc3NcIjogdHJ1ZSwgXCJtc2dcIjpcIkNhcHRjaGEgcGFzc2VkXCJ9KTtcclxufSk7XHJcblxyXG5cclxuIGNvbnN0IHtub21icmUsYXBlbGxpZG8sY2VkdWxhLGVzdGFkb2NpdmlsLGRpcmVjY2lvbnJlc2lkZW5jaWFsLHByb3ZpbmNpYSx0ZWxlZm9ub3MsY2VsdWxhcixvZmljaW5hdHJhYmFqbyxkaXJlY2Npb250cmFiYWpvLHRlbGVmb25vdHJhYmFqbyxmYXgscHVlc3RvLHN1ZWxkbyxmZWNoYWluZ3Jlc29lbXByZXNhLGVtYWlsLGFob3Jyb21lbnN1YWwsY2VydGlmaWNhZG9hcG9ydGFjaW9uLHZhbG9yY2VydGlmaWNhZG8sbm9tYnJlMixjZWR1bGEyfSA9IHJlcS5ib2R5O1xyXG4gbGV0IGVycm9ycyA9IFtdO1xyXG4gICBpZiAodHlwZW9mIG5vbWJyZSA9PT0gJ3N0cmluZycgJiYgbm9tYnJlLmxlbmdodCA8PTMgJiYgL15bYS16XSskL2kudGVzdChub21icmUpKSB7XHJcbiAgICAgZXJyb3JzLnB1c2goe3RleHQ6ICdFbCBOb21icmUgZGViZSBkZSB0ZW5lciBtw6FzIGRlIDMgY2FyYWN0ZXJlcyd9KTtcclxuICAgfVxyXG4gICBpZiAodHlwZW9mIGFwZWxsaWRvID09PSAnc3RyaW5nJyAmJiBhcGVsbGlkby5sZW5naHQgPD0zICYmIC9eW2Etel0rJC9pLnRlc3QoYXBlbGxpZG8pKSB7XHJcbiAgICAgZXJyb3JzLnB1c2goe3RleHQ6ICdFbCBBcGVsbGlkbyBkZWJlIGRlIHRlbmVyIG3DoXMgZGUgMyBjYXJhY3RlcmVzJ30pO1xyXG4gICB9XHJcbiAgIGlmICh0eXBlb2YgY2VkdWxhID09PSAnaXNOYU4nICYmIGNlZHVsYS5sZW5naHQgPD01ICYmIC9eWzAtOV0rJC9pLnRlc3QoY2VkdWxhKSkge1xyXG4gICAgICAgZXJyb3JzLnB1c2goe3RleHQ6ICdDZWR1bGEgc29sbyBwdWVkZSBsbGV2YXIgY2FyYWN0ZXJlcyBuw7ptZXJpY29zJ30pO1xyXG4gICB9XHJcbiAgIGlmICghZXN0YWRvY2l2aWwpIHtcclxuICAgICAgIGVycm9ycy5wdXNoKHt0ZXh0OiAnUG9yIGZhdm9yIFNlbGVjY2lvbmUgc3UgRXN0YWRvIENpdmlsJ30pO1xyXG4gICB9XHJcbiAgIFxyXG4gICBpZiAoZGlyZWNjaW9ucmVzaWRlbmNpYWwubGVuZ3RoIDw9IDApIHtcclxuICAgICBlcnJvcnMucHVzaCh7dGV4dDogJ0VsIHNpZ3VpZW50ZSBjYW1wbyBlc3RhIHZhY2lvOiBEaXJlY2Npw7NuIFJlc2lkZW5jaWFsJ30pO1xyXG4gICAgfVxyXG4gICAgaWYgKHByb3ZpbmNpYS5sZW5ndGggPD0gMCkge1xyXG4gICAgIGVycm9ycy5wdXNoKHt0ZXh0OiAnRWwgc2lndWllbnRlIGNhbXBvIGVzdGEgdmFjaW86IFByb3ZpbmNpYSd9KTtcclxuICAgIH1cclxuICAgIGlmICh0ZWxlZm9ub3MubGVuZ3RoIDwgOCkge1xyXG4gICAgICBlcnJvcnMucHVzaCh7dGV4dDogJ0VsIFRlbGVmb25vIGRlYmUgZGUgdGVuZXIgcG9yIGxvIG1lbm9zIDggRGlnaXRvcyd9KTtcclxuICAgIH1cclxuICAgIGlmIChjZWx1bGFyLmxlbmd0aCA8IDgpIHtcclxuICAgICAgZXJyb3JzLnB1c2goe3RleHQ6ICdFbCBDZWx1bGFyIGRlYmUgZGUgdGVuZXIgcG9yIGxvIG1lbm9zIDggRGlnaXRvcyd9KTtcclxuICAgIH1cclxuICAgIGlmIChvZmljaW5hdHJhYmFqby5sZW5ndGggPD0gMCkge1xyXG4gICAgICBlcnJvcnMucHVzaCh7dGV4dDogJ0VsIHNpZ3VpZW50ZSBjYW1wbyBlc3RhIHZhY2lvOiBPZmljaW5hIGRlIFRyYWJham8nfSk7XHJcbiAgICB9XHJcbiAgICBpZiAoZGlyZWNjaW9udHJhYmFqby5sZW5ndGggPD0gMCkge1xyXG4gICAgICBlcnJvcnMucHVzaCh7dGV4dDogJ0VsIHNpZ3VpZW50ZSBjYW1wbyBlc3RhIHZhY2lvOiBEaXJlY2Npw7NuIGRlIFRyYWJham8nfSk7XHJcbiAgICB9XHJcbiAgICBpZiAodGVsZWZvbm90cmFiYWpvLmxlbmd0aCA8IDgpIHtcclxuICAgICAgZXJyb3JzLnB1c2goe3RleHQ6ICdFbCBUZWxlZm9ubyBkZWwgVHJhYmFqbyBkZWJlIGRlIHRlbmVyIHBvciBsbyBtZW5vcyA4IERpZ2l0b3MnfSk7XHJcbiAgICB9XHJcbiAgICBpZiAoZmVjaGFpbmdyZXNvZW1wcmVzYS5sZW5ndGggPD0gMCkge1xyXG4gICAgICBlcnJvcnMucHVzaCh7dGV4dDogJ0VsIHNpZ3VpZW50ZSBjYW1wbyBlc3RhIHZhY2lvOiBGZWNoYSBkZSBJbmdyZXNvIEVtcHJlc2EnfSk7XHJcbiAgICB9XHJcbiAgICBpZiAoZmF4Lmxlbmd0aCA8PSAwKSB7XHJcbiAgICAgIGVycm9ycy5wdXNoKHt0ZXh0OiAnRWwgc2lndWllbnRlIGNhbXBvIGVzdGEgdmFjaW86IEZheCd9KTtcclxuICAgIH1cclxuICAgIGlmIChwdWVzdG8ubGVuZ3RoIDw9IDApIHtcclxuICAgICAgZXJyb3JzLnB1c2goe3RleHQ6ICdFbCBzaWd1aWVudGUgY2FtcG8gZXN0YSB2YWNpbzogUHVlc3RvJ30pO1xyXG4gICAgfVxyXG4gICAgaWYgKHN1ZWxkby5sZW5ndGggPD0gMCkge1xyXG4gICAgICBlcnJvcnMucHVzaCh7dGV4dDogJ0VsIHNpZ3VpZW50ZSBjYW1wbyBlc3RhIHZhY2lvOiBTdWVsZG8nfSk7XHJcbiAgICB9XHJcbiAgICBpZiAoZW1haWwubGVuZ3RoIDw9IDApIHtcclxuICAgICAgZXJyb3JzLnB1c2goe3RleHQ6ICdFbCBzaWd1aWVudGUgY2FtcG8gZXN0YSB2YWNpbzogQ29ycmVvIEVsZWN0csOzbmljbyd9KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuIFxyXG4gICAgaWYoZXJyb3JzLmxlbmd0aCA+IDApIHtcclxuICAgICAgcmVzLnJlbmRlcignZm9ybScsIHtlcnJvcnMsbm9tYnJlLGFwZWxsaWRvLGNlZHVsYSxkaXJlY2Npb25yZXNpZGVuY2lhbCx0ZWxlZm9ub3MsY2VsdWxhcixvZmljaW5hdHJhYmFqbyxkaXJlY2Npb250cmFiYWpvLHRlbGVmb25vdHJhYmFqbyxmYXgscHVlc3RvLGZlY2hhaW5ncmVzb2VtcHJlc2Esc3VlbGRvLGVtYWlsLG5vbWJyZTIsY2VkdWxhMn0pO1xyXG4gICAgfSBlbHNlIHtcclxuXHJcbiAgICAgIFxyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGxldCBkYXRhTmFtZSA9IGF3YWl0IG51ZXZvU29jaW9zLmNyZWF0ZSh7XHJcblxyXG4gICAgICBub21icmUsXHJcbiAgICAgIGFwZWxsaWRvXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGxldCBkYXRhID0gYXdhaXQgRGF0YVJlZ2lzdGVyLmNyZWF0ZSh7XHJcblxyXG4gICAgICBub21icmUsXHJcbiAgICAgIGFwZWxsaWRvLFxyXG4gICAgICBjZWR1bGEsXHJcbiAgICAgIGVzdGFkb2NpdmlsLFxyXG4gICAgICBkaXJlY2Npb25yZXNpZGVuY2lhbCxcclxuICAgICAgcHJvdmluY2lhLFxyXG4gICAgICB0ZWxlZm9ub3MsXHJcbiAgICAgIGNlbHVsYXIsXHJcbiAgICAgIG9maWNpbmF0cmFiYWpvLFxyXG4gICAgICBkaXJlY2Npb250cmFiYWpvLFxyXG4gICAgICB0ZWxlZm9ub3RyYWJham8sXHJcbiAgICAgIGZheCxcclxuICAgICAgcHVlc3RvLFxyXG4gICAgICBzdWVsZG8sXHJcbiAgICAgIGZlY2hhaW5ncmVzb2VtcHJlc2EsXHJcbiAgICAgIGVtYWlsLFxyXG4gICAgICBhaG9ycm9tZW5zdWFsLFxyXG4gICAgICBjZXJ0aWZpY2Fkb2Fwb3J0YWNpb24sXHJcbiAgICAgIHZhbG9yY2VydGlmaWNhZG8sXHJcbiAgICAgIG5vbWJyZTIsXHJcbiAgICAgIGNlZHVsYTJcclxuXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgXHJcbiAgICAgICAgaWYgKGRhdGEpIHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICByZXMucmVkaXJlY3QoJy8nKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coZSk7XHJcbiAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgbWVzc2FnZTogJ0FsZ28gaGEgaWRvIE1hbCcsXHJcbiAgICAgICAgICBkYXRhOiB7fVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8vIHJlcy5yZWRpcmVjdCgnLycpO1xyXG4gICAgICB9O1xyXG4gICAgY29uc29sZS5sb2codmVyaWZ5VVJMKTtcclxuICB9XHJcbn07XHJcbi8vICAgICAvLyBmaWVsZHM6IFsnbm9tYnJlJywgJ2NlZHVsYScsICdlc3RhZG9jaXZpbCcsICdkaXJlY2Npb25yZXNpZGVuY2lhbCcsICdwcm92aW5jaWEnLCAndGVsZWZvbm9zJywgJ2NlbHVsYXInLCAnb2ZpY2luYXRyYWJham8nLCAnZGlyZWNjaW9udHJhYmFqbycsICd0ZWxlZm9ubycsICdmYXgnLCAncHVlc3RvdHJhYmFqbycsICdmZWNoYWluZ3Jlc29lbXByZXNhJywgJ3N1ZWxkbycsICdlbWFpbCddXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "controller.socio.js"
      ],
      "names": [
        "savesocioDB",
        "req",
        "res",
        "captcha",
        "body",
        "secretKey",
        "verifyURL",
        "connection",
        "remoteAddress",
        "err",
        "response",
        "JSON",
        "parse",
        "console",
        "log",
        "nombre",
        "apellido",
        "cedula",
        "estadocivil",
        "direccionresidencial",
        "provincia",
        "telefonos",
        "celular",
        "oficinatrabajo",
        "direcciontrabajo",
        "telefonotrabajo",
        "fax",
        "puesto",
        "sueldo",
        "fechaingresoempresa",
        "email",
        "ahorromensual",
        "certificadoaportacion",
        "valorcertificado",
        "nombre2",
        "cedula2",
        "errors",
        "lenght",
        "test",
        "push",
        "text",
        "length",
        "render",
        "nuevoSocios",
        "create",
        "dataName",
        "DataRegister",
        "data",
        "redirect",
        "status",
        "json",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;SACsBA,W;;;;;;;0BAAf,iBAA4BC,GAA5B,EAAgCC,GAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAECC,YAAAA,OAFD,GAEWF,GAAG,CAACG,IAAJ,CAAS,sBAAT,CAFX,EAGL;;AACMC,YAAAA,SAJD,GAIa,0CAJb,EAKL;;AACIC,YAAAA,SANC,oEAMqED,SANrE,uBAM2FF,OAN3F,uBAM+GF,GAAG,CAACM,UAAJ,CAAeC,aAN9H,GAQL;AACA;AACA;AACA;AAEC;;AACH,qCAAQF,SAAR,EAAmB,UAACG,GAAD,EAAMC,QAAN,EAAgBN,IAAhB,EAAyB;AAC1CA,cAAAA,IAAI,GAAGO,IAAI,CAACC,KAAL,CAAWR,IAAX,CAAP;AACAS,cAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ,EAF0C,CAIxC;AACA;AACA;AACA;AACA;AAGF;AACA;AACD,aAbD;AAdO,wBA8ByPH,GAAG,CAACG,IA9B7P,EA8BCW,MA9BD,aA8BCA,MA9BD,EA8BQC,QA9BR,aA8BQA,QA9BR,EA8BiBC,MA9BjB,aA8BiBA,MA9BjB,EA8BwBC,WA9BxB,aA8BwBA,WA9BxB,EA8BoCC,oBA9BpC,aA8BoCA,oBA9BpC,EA8ByDC,SA9BzD,aA8ByDA,SA9BzD,EA8BmEC,SA9BnE,aA8BmEA,SA9BnE,EA8B6EC,OA9B7E,aA8B6EA,OA9B7E,EA8BqFC,cA9BrF,aA8BqFA,cA9BrF,EA8BoGC,gBA9BpG,aA8BoGA,gBA9BpG,EA8BqHC,eA9BrH,aA8BqHA,eA9BrH,EA8BqIC,GA9BrI,aA8BqIA,GA9BrI,EA8ByIC,MA9BzI,aA8ByIA,MA9BzI,EA8BgJC,MA9BhJ,aA8BgJA,MA9BhJ,EA8BuJC,mBA9BvJ,aA8BuJA,mBA9BvJ,EA8B2KC,KA9B3K,aA8B2KA,KA9B3K,EA8BiLC,aA9BjL,aA8BiLA,aA9BjL,EA8B+LC,qBA9B/L,aA8B+LA,qBA9B/L,EA8BqNC,gBA9BrN,aA8BqNA,gBA9BrN,EA8BsOC,OA9BtO,aA8BsOA,OA9BtO,EA8B8OC,OA9B9O,aA8B8OA,OA9B9O;AA+BFC,YAAAA,MA/BE,GA+BO,EA/BP;;AAgCJ,gBAAI,OAAOrB,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACsB,MAAP,IAAgB,CAA9C,IAAmD,YAAYC,IAAZ,CAAiBvB,MAAjB,CAAvD,EAAiF;AAC/EqB,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACD;;AACD,gBAAI,OAAOxB,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,CAACqB,MAAT,IAAkB,CAAlD,IAAuD,YAAYC,IAAZ,CAAiBtB,QAAjB,CAA3D,EAAuF;AACrFoB,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACD;;AACD,gBAAI,OAAOvB,MAAP,KAAkB,OAAlB,IAA6BA,MAAM,CAACoB,MAAP,IAAgB,CAA7C,IAAkD,YAAYC,IAAZ,CAAiBrB,MAAjB,CAAtD,EAAgF;AAC5EmB,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACH;;AACD,gBAAI,CAACtB,WAAL,EAAkB;AACdkB,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACH;;AAED,gBAAIrB,oBAAoB,CAACsB,MAArB,IAA+B,CAAnC,EAAsC;AACpCL,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACA;;AACD,gBAAIpB,SAAS,CAACqB,MAAV,IAAoB,CAAxB,EAA2B;AAC1BL,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACA;;AACD,gBAAInB,SAAS,CAACoB,MAAV,GAAmB,CAAvB,EAA0B;AACxBL,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACD;;AACD,gBAAIlB,OAAO,CAACmB,MAAR,GAAiB,CAArB,EAAwB;AACtBL,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACD;;AACD,gBAAIjB,cAAc,CAACkB,MAAf,IAAyB,CAA7B,EAAgC;AAC9BL,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACD;;AACD,gBAAIhB,gBAAgB,CAACiB,MAAjB,IAA2B,CAA/B,EAAkC;AAChCL,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACD;;AACD,gBAAIf,eAAe,CAACgB,MAAhB,GAAyB,CAA7B,EAAgC;AAC9BL,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACD;;AACD,gBAAIX,mBAAmB,CAACY,MAApB,IAA8B,CAAlC,EAAqC;AACnCL,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACD;;AACD,gBAAId,GAAG,CAACe,MAAJ,IAAc,CAAlB,EAAqB;AACnBL,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACD;;AACD,gBAAIb,MAAM,CAACc,MAAP,IAAiB,CAArB,EAAwB;AACtBL,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACD;;AACD,gBAAIZ,MAAM,CAACa,MAAP,IAAiB,CAArB,EAAwB;AACtBL,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACD;;AACD,gBAAIV,KAAK,CAACW,MAAN,IAAgB,CAApB,EAAuB;AACrBL,cAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ;AACD;;AAhFE,kBAqFAJ,MAAM,CAACK,MAAP,GAAgB,CArFhB;AAAA;AAAA;AAAA;;AAsFDvC,YAAAA,GAAG,CAACwC,MAAJ,CAAW,MAAX,EAAmB;AAACN,cAAAA,MAAM,EAANA,MAAD;AAAQrB,cAAAA,MAAM,EAANA,MAAR;AAAeC,cAAAA,QAAQ,EAARA,QAAf;AAAwBC,cAAAA,MAAM,EAANA,MAAxB;AAA+BE,cAAAA,oBAAoB,EAApBA,oBAA/B;AAAoDE,cAAAA,SAAS,EAATA,SAApD;AAA8DC,cAAAA,OAAO,EAAPA,OAA9D;AAAsEC,cAAAA,cAAc,EAAdA,cAAtE;AAAqFC,cAAAA,gBAAgB,EAAhBA,gBAArF;AAAsGC,cAAAA,eAAe,EAAfA,eAAtG;AAAsHC,cAAAA,GAAG,EAAHA,GAAtH;AAA0HC,cAAAA,MAAM,EAANA,MAA1H;AAAiIE,cAAAA,mBAAmB,EAAnBA,mBAAjI;AAAqJD,cAAAA,MAAM,EAANA,MAArJ;AAA4JE,cAAAA,KAAK,EAALA,KAA5J;AAAkKI,cAAAA,OAAO,EAAPA,OAAlK;AAA0KC,cAAAA,OAAO,EAAPA;AAA1K,aAAnB;AAtFC;AAAA;;AAAA;AAAA;AAAA;AAAA,mBA2FsBQ,0BAAYC,MAAZ,CAAmB;AAE1C7B,cAAAA,MAAM,EAANA,MAF0C;AAG1CC,cAAAA,QAAQ,EAARA;AAH0C,aAAnB,CA3FtB;;AAAA;AA2FK6B,YAAAA,QA3FL;AAAA;AAAA,mBAiGkBC,0BAAaF,MAAb,CAAoB;AAEvC7B,cAAAA,MAAM,EAANA,MAFuC;AAGvCC,cAAAA,QAAQ,EAARA,QAHuC;AAIvCC,cAAAA,MAAM,EAANA,MAJuC;AAKvCC,cAAAA,WAAW,EAAXA,WALuC;AAMvCC,cAAAA,oBAAoB,EAApBA,oBANuC;AAOvCC,cAAAA,SAAS,EAATA,SAPuC;AAQvCC,cAAAA,SAAS,EAATA,SARuC;AASvCC,cAAAA,OAAO,EAAPA,OATuC;AAUvCC,cAAAA,cAAc,EAAdA,cAVuC;AAWvCC,cAAAA,gBAAgB,EAAhBA,gBAXuC;AAYvCC,cAAAA,eAAe,EAAfA,eAZuC;AAavCC,cAAAA,GAAG,EAAHA,GAbuC;AAcvCC,cAAAA,MAAM,EAANA,MAduC;AAevCC,cAAAA,MAAM,EAANA,MAfuC;AAgBvCC,cAAAA,mBAAmB,EAAnBA,mBAhBuC;AAiBvCC,cAAAA,KAAK,EAALA,KAjBuC;AAkBvCC,cAAAA,aAAa,EAAbA,aAlBuC;AAmBvCC,cAAAA,qBAAqB,EAArBA,qBAnBuC;AAoBvCC,cAAAA,gBAAgB,EAAhBA,gBApBuC;AAqBvCC,cAAAA,OAAO,EAAPA,OArBuC;AAsBvCC,cAAAA,OAAO,EAAPA;AAtBuC,aAApB,CAjGlB;;AAAA;AAiGKY,YAAAA,IAjGL;;AA4HC,gBAAIA,IAAJ,EAAU;AAER7C,cAAAA,GAAG,CAAC8C,QAAJ,CAAa,GAAb;AACD;;AA/HF;AAAA;;AAAA;AAAA;AAAA;AAkIGnC,YAAAA,OAAO,CAACC,GAAR;AACAZ,YAAAA,GAAG,CAAC+C,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAE,iBADQ;AAErBJ,cAAAA,IAAI,EAAE;AAFe,aAArB,EAnIH,CAuIC;;AAvID;AAwIA;AACHlC,YAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;;AAzIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA2IN,C,CACD",
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\controllers",
      "sourcesContent": [
        "import request from 'request';\r\nimport DataRegister from  '../models/Data_register';\r\nimport nuevoSocios from '../models/Nuevos_socios';\r\nexport async function savesocioDB (req,res) {\r\n\r\n  const captcha = req.body['g-recaptcha-response'];\r\n  // Secret Key\r\n  const secretKey = '6Lc7Q7MUAAAAAOiHyEwkMOxgJvSv1sF9avSLEOs6';\r\n  // Verify URL\r\n  var verifyURL = `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${captcha}&remoteip=${req.connection.remoteAddress}`;\r\n\r\n  // if(req.body['g-recaptcha-response'] === undefined || req.body['g-recaptcha-response'] === '' || req.body['g-recaptcha-response'] === null)\r\n  // {\r\n  //  req.flash(\"error\", \"Captcha Failed\");\r\n  // }\r\n\r\n   // Make Request To VerifyURL\r\nrequest(verifyURL, (err, response, body) => {\r\n  body = JSON.parse(body);\r\n  console.log(body);\r\n\r\n    // // if not successful\r\n    // if(body.success !== undefined && !body.success){\r\n    //   req.flash(\"error\", \"Captcha Failed\");\r\n    //   return res.redirect(\"/\");\r\n    // }\r\n\r\n\r\n  // //If Successful\r\n  // return res.json({\"success\": true, \"msg\":\"Captcha passed\"});\r\n});\r\n\r\n\r\n const {nombre,apellido,cedula,estadocivil,direccionresidencial,provincia,telefonos,celular,oficinatrabajo,direcciontrabajo,telefonotrabajo,fax,puesto,sueldo,fechaingresoempresa,email,ahorromensual,certificadoaportacion,valorcertificado,nombre2,cedula2} = req.body;\r\n let errors = [];\r\n   if (typeof nombre === 'string' && nombre.lenght <=3 && /^[a-z]+$/i.test(nombre)) {\r\n     errors.push({text: 'El Nombre debe de tener más de 3 caracteres'});\r\n   }\r\n   if (typeof apellido === 'string' && apellido.lenght <=3 && /^[a-z]+$/i.test(apellido)) {\r\n     errors.push({text: 'El Apellido debe de tener más de 3 caracteres'});\r\n   }\r\n   if (typeof cedula === 'isNaN' && cedula.lenght <=5 && /^[0-9]+$/i.test(cedula)) {\r\n       errors.push({text: 'Cedula solo puede llevar caracteres númericos'});\r\n   }\r\n   if (!estadocivil) {\r\n       errors.push({text: 'Por favor Seleccione su Estado Civil'});\r\n   }\r\n   \r\n   if (direccionresidencial.length <= 0) {\r\n     errors.push({text: 'El siguiente campo esta vacio: Dirección Residencial'});\r\n    }\r\n    if (provincia.length <= 0) {\r\n     errors.push({text: 'El siguiente campo esta vacio: Provincia'});\r\n    }\r\n    if (telefonos.length < 8) {\r\n      errors.push({text: 'El Telefono debe de tener por lo menos 8 Digitos'});\r\n    }\r\n    if (celular.length < 8) {\r\n      errors.push({text: 'El Celular debe de tener por lo menos 8 Digitos'});\r\n    }\r\n    if (oficinatrabajo.length <= 0) {\r\n      errors.push({text: 'El siguiente campo esta vacio: Oficina de Trabajo'});\r\n    }\r\n    if (direcciontrabajo.length <= 0) {\r\n      errors.push({text: 'El siguiente campo esta vacio: Dirección de Trabajo'});\r\n    }\r\n    if (telefonotrabajo.length < 8) {\r\n      errors.push({text: 'El Telefono del Trabajo debe de tener por lo menos 8 Digitos'});\r\n    }\r\n    if (fechaingresoempresa.length <= 0) {\r\n      errors.push({text: 'El siguiente campo esta vacio: Fecha de Ingreso Empresa'});\r\n    }\r\n    if (fax.length <= 0) {\r\n      errors.push({text: 'El siguiente campo esta vacio: Fax'});\r\n    }\r\n    if (puesto.length <= 0) {\r\n      errors.push({text: 'El siguiente campo esta vacio: Puesto'});\r\n    }\r\n    if (sueldo.length <= 0) {\r\n      errors.push({text: 'El siguiente campo esta vacio: Sueldo'});\r\n    }\r\n    if (email.length <= 0) {\r\n      errors.push({text: 'El siguiente campo esta vacio: Correo Electrónico'});\r\n    }\r\n    \r\n    \r\n    \r\n \r\n    if(errors.length > 0) {\r\n      res.render('form', {errors,nombre,apellido,cedula,direccionresidencial,telefonos,celular,oficinatrabajo,direcciontrabajo,telefonotrabajo,fax,puesto,fechaingresoempresa,sueldo,email,nombre2,cedula2});\r\n    } else {\r\n\r\n      \r\n      try {\r\n        let dataName = await nuevoSocios.create({\r\n\r\n      nombre,\r\n      apellido\r\n        });\r\n\r\n        let data = await DataRegister.create({\r\n\r\n      nombre,\r\n      apellido,\r\n      cedula,\r\n      estadocivil,\r\n      direccionresidencial,\r\n      provincia,\r\n      telefonos,\r\n      celular,\r\n      oficinatrabajo,\r\n      direcciontrabajo,\r\n      telefonotrabajo,\r\n      fax,\r\n      puesto,\r\n      sueldo,\r\n      fechaingresoempresa,\r\n      email,\r\n      ahorromensual,\r\n      certificadoaportacion,\r\n      valorcertificado,\r\n      nombre2,\r\n      cedula2\r\n\r\n        });\r\n\r\n    \r\n        if (data) {\r\n            \r\n          res.redirect('/');\r\n        }\r\n    \r\n      } catch (e) {\r\n          console.log(e);\r\n          res.status(500).json({\r\n              message: 'Algo ha ido Mal',\r\n          data: {}\r\n        });\r\n        // res.redirect('/');\r\n      };\r\n    console.log(verifyURL);\r\n  }\r\n};\r\n//     // fields: ['nombre', 'cedula', 'estadocivil', 'direccionresidencial', 'provincia', 'telefonos', 'celular', 'oficinatrabajo', 'direcciontrabajo', 'telefono', 'fax', 'puestotrabajo', 'fechaingresoempresa', 'sueldo', 'email']\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566918832580
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\app\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"filename\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\app\\\\models\\\\Data_register.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\models\\Data_register.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\models\\Data_register.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\models\\Data_register.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\models",
        "sourceFileName": "Data_register.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _dbconfig = require(\"../../config/dbconfig\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar DataRegister = _dbconfig.sequelize.define('data_register', {\n  id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  cedula: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  estadocivil: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  direccionresidencial: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  provincia: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  telefonos: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  celular: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  oficinatrabajo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  direcciontrabajo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  telefono: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  fax: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  puestotrabajo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  fechaingresoempresa: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  sueldo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  email: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  socio_ID: {\n    type: _sequelize[\"default\"].INTEGER\n  }\n}, {\n  createdAt: false,\n  updatedAt: false\n});\n\nvar _default = DataRegister;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGFfcmVnaXN0ZXIuanMiXSwibmFtZXMiOlsiRGF0YVJlZ2lzdGVyIiwic2VxdWVsaXplIiwiZGVmaW5lIiwiaWQiLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJub21icmUiLCJURVhUIiwiY2VkdWxhIiwiZXN0YWRvY2l2aWwiLCJkaXJlY2Npb25yZXNpZGVuY2lhbCIsInByb3ZpbmNpYSIsInRlbGVmb25vcyIsImNlbHVsYXIiLCJvZmljaW5hdHJhYmFqbyIsImRpcmVjY2lvbnRyYWJham8iLCJ0ZWxlZm9ubyIsImZheCIsInB1ZXN0b3RyYWJham8iLCJmZWNoYWluZ3Jlc29lbXByZXNhIiwic3VlbGRvIiwiZW1haWwiLCJzb2Npb19JRCIsImNyZWF0ZWRBdCIsInVwZGF0ZWRBdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBR0MsSUFBTUEsWUFBWSxHQUFHQyxvQkFBVUMsTUFBVixDQUFpQixlQUFqQixFQUFrQztBQUNwREMsRUFBQUEsRUFBRSxFQUFFO0FBQ0FDLElBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BRGhCO0FBRUFDLElBQUFBLFVBQVUsRUFBRTtBQUZaLEdBRGdEO0FBS3BEQyxFQUFBQSxNQUFNLEVBQUU7QUFDSkosSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFEWixHQUw0QztBQVFwREMsRUFBQUEsTUFBTSxFQUFFO0FBQ0pOLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFosR0FSNEM7QUFXcERFLEVBQUFBLFdBQVcsRUFBRTtBQUNUUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURQLEdBWHVDO0FBY3BERyxFQUFBQSxvQkFBb0IsRUFBRTtBQUNsQlIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFERSxHQWQ4QjtBQWlCcERJLEVBQUFBLFNBQVMsRUFBRTtBQUNQVCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURULEdBakJ5QztBQW9CcERLLEVBQUFBLFNBQVMsRUFBRTtBQUNQVixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURULEdBcEJ5QztBQXVCcERNLEVBQUFBLE9BQU8sRUFBRTtBQUNMWCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURYLEdBdkIyQztBQTBCcERPLEVBQUFBLGNBQWMsRUFBRTtBQUNaWixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURKLEdBMUJvQztBQTZCcERRLEVBQUFBLGdCQUFnQixFQUFFO0FBQ2RiLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBREYsR0E3QmtDO0FBZ0NwRFMsRUFBQUEsUUFBUSxFQUFFO0FBQ05kLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFYsR0FoQzBDO0FBbUNwRFUsRUFBQUEsR0FBRyxFQUFFO0FBQ0RmLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRGYsR0FuQytDO0FBc0NwRFcsRUFBQUEsYUFBYSxFQUFFO0FBQ1hoQixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURMLEdBdENxQztBQXlDcERZLEVBQUFBLG1CQUFtQixFQUFFO0FBQ2pCakIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFEQyxHQXpDK0I7QUE0Q3BEYSxFQUFBQSxNQUFNLEVBQUU7QUFDSmxCLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFosR0E1QzRDO0FBK0NwRGMsRUFBQUEsS0FBSyxFQUFFO0FBQ0huQixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURiLEdBL0M2QztBQWtEcERlLEVBQUFBLFFBQVEsRUFBRTtBQUNOcEIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEVjtBQWxEMEMsQ0FBbEMsRUF1RHRCO0FBQ0ltQixFQUFBQSxTQUFTLEVBQUUsS0FEZjtBQUVJQyxFQUFBQSxTQUFTLEVBQUU7QUFGZixDQXZEc0IsQ0FBckI7O2VBNkRjMUIsWSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHNpbGVudC1zbmFrZTI3XFxEZXNrdG9wXFxyZWdpc3Ryby1hcHAtY2FwdHVyZVxcc3JjXFxhcHBcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuaW1wb3J0IHtzZXF1ZWxpemV9IGZyb20gJy4uLy4uL2NvbmZpZy9kYmNvbmZpZyc7XHJcblxyXG5cclxuIGNvbnN0IERhdGFSZWdpc3RlciA9IHNlcXVlbGl6ZS5kZWZpbmUoJ2RhdGFfcmVnaXN0ZXInLCB7XHJcbiAgICBpZDoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWVcclxuICAgIH0sXHJcbiAgICBub21icmU6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGNlZHVsYToge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgZXN0YWRvY2l2aWw6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGRpcmVjY2lvbnJlc2lkZW5jaWFsOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBwcm92aW5jaWE6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIHRlbGVmb25vczoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgY2VsdWxhcjoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgb2ZpY2luYXRyYWJham86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGRpcmVjY2lvbnRyYWJham86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIHRlbGVmb25vOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBmYXg6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIHB1ZXN0b3RyYWJham86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGZlY2hhaW5ncmVzb2VtcHJlc2E6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIHN1ZWxkbzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgZW1haWw6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIHNvY2lvX0lEOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH1cclxuXHJcbn0sXHJcbntcclxuICAgIGNyZWF0ZWRBdDogZmFsc2UsXHJcbiAgICB1cGRhdGVkQXQ6IGZhbHNlXHJcbn1cclxuKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IERhdGFSZWdpc3RlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Data_register.js"
      ],
      "names": [
        "DataRegister",
        "sequelize",
        "define",
        "id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "nombre",
        "TEXT",
        "cedula",
        "estadocivil",
        "direccionresidencial",
        "provincia",
        "telefonos",
        "celular",
        "oficinatrabajo",
        "direcciontrabajo",
        "telefono",
        "fax",
        "puestotrabajo",
        "fechaingresoempresa",
        "sueldo",
        "email",
        "socio_ID",
        "createdAt",
        "updatedAt"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAGC,IAAMA,YAAY,GAAGC,oBAAUC,MAAV,CAAiB,eAAjB,EAAkC;AACpDC,EAAAA,EAAE,EAAE;AACAC,IAAAA,IAAI,EAAEC,sBAAUC,OADhB;AAEAC,IAAAA,UAAU,EAAE;AAFZ,GADgD;AAKpDC,EAAAA,MAAM,EAAE;AACJJ,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GAL4C;AAQpDC,EAAAA,MAAM,EAAE;AACJN,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GAR4C;AAWpDE,EAAAA,WAAW,EAAE;AACTP,IAAAA,IAAI,EAAEC,sBAAUI;AADP,GAXuC;AAcpDG,EAAAA,oBAAoB,EAAE;AAClBR,IAAAA,IAAI,EAAEC,sBAAUI;AADE,GAd8B;AAiBpDI,EAAAA,SAAS,EAAE;AACPT,IAAAA,IAAI,EAAEC,sBAAUI;AADT,GAjByC;AAoBpDK,EAAAA,SAAS,EAAE;AACPV,IAAAA,IAAI,EAAEC,sBAAUI;AADT,GApByC;AAuBpDM,EAAAA,OAAO,EAAE;AACLX,IAAAA,IAAI,EAAEC,sBAAUI;AADX,GAvB2C;AA0BpDO,EAAAA,cAAc,EAAE;AACZZ,IAAAA,IAAI,EAAEC,sBAAUI;AADJ,GA1BoC;AA6BpDQ,EAAAA,gBAAgB,EAAE;AACdb,IAAAA,IAAI,EAAEC,sBAAUI;AADF,GA7BkC;AAgCpDS,EAAAA,QAAQ,EAAE;AACNd,IAAAA,IAAI,EAAEC,sBAAUI;AADV,GAhC0C;AAmCpDU,EAAAA,GAAG,EAAE;AACDf,IAAAA,IAAI,EAAEC,sBAAUI;AADf,GAnC+C;AAsCpDW,EAAAA,aAAa,EAAE;AACXhB,IAAAA,IAAI,EAAEC,sBAAUI;AADL,GAtCqC;AAyCpDY,EAAAA,mBAAmB,EAAE;AACjBjB,IAAAA,IAAI,EAAEC,sBAAUI;AADC,GAzC+B;AA4CpDa,EAAAA,MAAM,EAAE;AACJlB,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GA5C4C;AA+CpDc,EAAAA,KAAK,EAAE;AACHnB,IAAAA,IAAI,EAAEC,sBAAUI;AADb,GA/C6C;AAkDpDe,EAAAA,QAAQ,EAAE;AACNpB,IAAAA,IAAI,EAAEC,sBAAUC;AADV;AAlD0C,CAAlC,EAuDtB;AACImB,EAAAA,SAAS,EAAE,KADf;AAEIC,EAAAA,SAAS,EAAE;AAFf,CAvDsB,CAArB;;eA6Dc1B,Y",
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../../config/dbconfig';\r\n\r\n\r\n const DataRegister = sequelize.define('data_register', {\r\n    id: {\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n    nombre: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    cedula: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    estadocivil: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    direccionresidencial: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    provincia: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    telefonos: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    celular: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    oficinatrabajo: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    direcciontrabajo: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    telefono: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    fax: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    puestotrabajo: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    fechaingresoempresa: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    sueldo: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    email: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    socio_ID: {\r\n        type: Sequelize.INTEGER\r\n    }\r\n\r\n},\r\n{\r\n    createdAt: false,\r\n    updatedAt: false\r\n}\r\n);\r\n\r\nexport default DataRegister;"
      ]
    },
    "sourceType": "script",
    "mtime": 1565129849942
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\app\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"filename\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\app\\\\models\\\\Nuevos_socios.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\models\\Nuevos_socios.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\models\\Nuevos_socios.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\models\\Nuevos_socios.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\models",
        "sourceFileName": "Nuevos_socios.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _dbconfig = require(\"../../config/dbconfig\");\n\nvar _Data_register = _interopRequireDefault(require(\"./Data_register\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar nuevoSocios = _dbconfig.sequelize.define('nuevos_socios', {\n  id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  fecha_solicitud: {\n    type: _sequelize[\"default\"].DATE\n  }\n}, {\n  timestamps: false\n});\n\nnuevoSocios.hasMany(_Data_register[\"default\"], {\n  foreingKey: 'socio_ID',\n  sourceKey: 'id'\n});\n\n_Data_register[\"default\"].belongsTo(nuevoSocios, {\n  foreingKey: 'socio_ID',\n  sourceKey: 'id'\n});\n\nvar _default = nuevoSocios;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk51ZXZvc19zb2Npb3MuanMiXSwibmFtZXMiOlsibnVldm9Tb2Npb3MiLCJzZXF1ZWxpemUiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJTZXF1ZWxpemUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsIm5vbWJyZSIsIlRFWFQiLCJmZWNoYV9zb2xpY2l0dWQiLCJEQVRFIiwidGltZXN0YW1wcyIsImhhc01hbnkiLCJEYXRhUmVnaXN0ZXIiLCJmb3JlaW5nS2V5Iiwic291cmNlS2V5IiwiYmVsb25nc1RvIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7Ozs7QUFFQSxJQUFNQSxXQUFXLEdBQUdDLG9CQUFVQyxNQUFWLENBQWlCLGVBQWpCLEVBQWtDO0FBQ2xEQyxFQUFBQSxFQUFFLEVBQUU7QUFDQUMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEaEI7QUFFQUMsSUFBQUEsVUFBVSxFQUFFO0FBRlosR0FEOEM7QUFLbERDLEVBQUFBLE1BQU0sRUFBRTtBQUNKSixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURaLEdBTDBDO0FBUWxEQyxFQUFBQSxlQUFlLEVBQUU7QUFDYk4sSUFBQUEsSUFBSSxFQUFFQyxzQkFBVU07QUFESDtBQVJpQyxDQUFsQyxFQVdoQjtBQUNBQyxFQUFBQSxVQUFVLEVBQUU7QUFEWixDQVhnQixDQUFwQjs7QUFlQVosV0FBVyxDQUFDYSxPQUFaLENBQW9CQyx5QkFBcEIsRUFBa0M7QUFBQ0MsRUFBQUEsVUFBVSxFQUFFLFVBQWI7QUFBeUJDLEVBQUFBLFNBQVMsRUFBRTtBQUFwQyxDQUFsQzs7QUFDQUYsMEJBQWFHLFNBQWIsQ0FBdUJqQixXQUF2QixFQUFvQztBQUFDZSxFQUFBQSxVQUFVLEVBQUUsVUFBYjtBQUF5QkMsRUFBQUEsU0FBUyxFQUFFO0FBQXBDLENBQXBDOztlQUVlaEIsVyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHNpbGVudC1zbmFrZTI3XFxEZXNrdG9wXFxyZWdpc3Ryby1hcHAtY2FwdHVyZVxcc3JjXFxhcHBcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuaW1wb3J0IHtzZXF1ZWxpemV9IGZyb20gJy4uLy4uL2NvbmZpZy9kYmNvbmZpZyc7XHJcblxyXG5pbXBvcnQgRGF0YVJlZ2lzdGVyIGZyb20gJy4vRGF0YV9yZWdpc3Rlcic7IFxyXG5cclxuY29uc3QgbnVldm9Tb2Npb3MgPSBzZXF1ZWxpemUuZGVmaW5lKCdudWV2b3Nfc29jaW9zJywge1xyXG4gICAgaWQ6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXHJcbiAgICB9LFxyXG4gICAgbm9tYnJlOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBmZWNoYV9zb2xpY2l0dWQ6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuREFURVxyXG4gICAgfVxyXG59LCAge1xyXG4gICAgdGltZXN0YW1wczogZmFsc2VcclxufSk7XHJcblxyXG5udWV2b1NvY2lvcy5oYXNNYW55KERhdGFSZWdpc3Rlciwge2ZvcmVpbmdLZXk6ICdzb2Npb19JRCcsIHNvdXJjZUtleTogJ2lkJ30pO1xyXG5EYXRhUmVnaXN0ZXIuYmVsb25nc1RvKG51ZXZvU29jaW9zLCB7Zm9yZWluZ0tleTogJ3NvY2lvX0lEJywgc291cmNlS2V5OiAnaWQnfSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBudWV2b1NvY2lvczsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Nuevos_socios.js"
      ],
      "names": [
        "nuevoSocios",
        "sequelize",
        "define",
        "id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "nombre",
        "TEXT",
        "fecha_solicitud",
        "DATE",
        "timestamps",
        "hasMany",
        "DataRegister",
        "foreingKey",
        "sourceKey",
        "belongsTo"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;;;AAEA,IAAMA,WAAW,GAAGC,oBAAUC,MAAV,CAAiB,eAAjB,EAAkC;AAClDC,EAAAA,EAAE,EAAE;AACAC,IAAAA,IAAI,EAAEC,sBAAUC,OADhB;AAEAC,IAAAA,UAAU,EAAE;AAFZ,GAD8C;AAKlDC,EAAAA,MAAM,EAAE;AACJJ,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GAL0C;AAQlDC,EAAAA,eAAe,EAAE;AACbN,IAAAA,IAAI,EAAEC,sBAAUM;AADH;AARiC,CAAlC,EAWhB;AACAC,EAAAA,UAAU,EAAE;AADZ,CAXgB,CAApB;;AAeAZ,WAAW,CAACa,OAAZ,CAAoBC,yBAApB,EAAkC;AAACC,EAAAA,UAAU,EAAE,UAAb;AAAyBC,EAAAA,SAAS,EAAE;AAApC,CAAlC;;AACAF,0BAAaG,SAAb,CAAuBjB,WAAvB,EAAoC;AAACe,EAAAA,UAAU,EAAE,UAAb;AAAyBC,EAAAA,SAAS,EAAE;AAApC,CAApC;;eAEehB,W",
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\app\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../../config/dbconfig';\r\n\r\nimport DataRegister from './Data_register'; \r\n\r\nconst nuevoSocios = sequelize.define('nuevos_socios', {\r\n    id: {\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n    nombre: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    fecha_solicitud: {\r\n        type: Sequelize.DATE\r\n    }\r\n},  {\r\n    timestamps: false\r\n});\r\n\r\nnuevoSocios.hasMany(DataRegister, {foreingKey: 'socio_ID', sourceKey: 'id'});\r\nDataRegister.belongsTo(nuevoSocios, {foreingKey: 'socio_ID', sourceKey: 'id'});\r\n\r\nexport default nuevoSocios;"
      ]
    },
    "sourceType": "script",
    "mtime": 1565646198599
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"filename\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\routes\\\\form.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\routes\\form.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\routes\\form.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\routes\\form.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\routes",
        "sourceFileName": "form.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = require(\"express\");\n\nvar _controller = require(\"../controllers/controller.socio\");\n\nvar router = (0, _express.Router)(); // import request from 'request';\n// const {nuevoSocios} = require('../models/nuevos_socios');\n\n// const db = require('../../config/dbConnection');\n// const validations = require('../../config/validations');\nrouter.get('/', function (req, res) {\n  res.render('form');\n});\nrouter.post('/', _controller.savesocioDB);\nmodule.exports = router; // res.redirect('/');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcm0uanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwicmVuZGVyIiwicG9zdCIsInNhdmVzb2Npb0RCIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFJQTs7QUFIQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWYsQyxDQUNBO0FBQ0E7O0FBRUU7QUFDRjtBQUNBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFhO0FBQ3pCQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxNQUFYO0FBQ0gsQ0FGRDtBQUtBSixNQUFNLENBQUNLLElBQVAsQ0FBWSxHQUFaLEVBQWlCQyx1QkFBakI7QUFNQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWtCUixNQUFsQixDLENBSUEiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxzaWxlbnQtc25ha2UyN1xcRGVza3RvcFxccmVnaXN0cm8tYXBwLWNhcHR1cmVcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSb3V0ZXJ9IGZyb20gJ2V4cHJlc3MnO1xyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuLy8gaW1wb3J0IHJlcXVlc3QgZnJvbSAncmVxdWVzdCc7XHJcbi8vIGNvbnN0IHtudWV2b1NvY2lvc30gPSByZXF1aXJlKCcuLi9tb2RlbHMvbnVldm9zX3NvY2lvcycpO1xyXG5pbXBvcnQge3NhdmVzb2Npb0RCfSBmcm9tICcuLi9jb250cm9sbGVycy9jb250cm9sbGVyLnNvY2lvJztcclxuICAvLyBjb25zdCBkYiA9IHJlcXVpcmUoJy4uLy4uL2NvbmZpZy9kYkNvbm5lY3Rpb24nKTtcclxuLy8gY29uc3QgdmFsaWRhdGlvbnMgPSByZXF1aXJlKCcuLi8uLi9jb25maWcvdmFsaWRhdGlvbnMnKTtcclxucm91dGVyLmdldCgnLycsIChyZXEscmVzKSA9PiB7XHJcbiAgICByZXMucmVuZGVyKCdmb3JtJyk7XHJcbn0pO1xyXG5cclxuXHJcbnJvdXRlci5wb3N0KCcvJywgc2F2ZXNvY2lvREIpXHJcbiAgXHJcbiAgXHJcbiBcclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyAgPSByb3V0ZXI7XHJcblxyXG5cclxuXHJcbi8vIHJlcy5yZWRpcmVjdCgnLycpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "form.js"
      ],
      "names": [
        "router",
        "get",
        "req",
        "res",
        "render",
        "post",
        "savesocioDB",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AAIA;;AAHA,IAAMA,MAAM,GAAG,sBAAf,C,CACA;AACA;;AAEE;AACF;AACAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACzBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,MAAX;AACH,CAFD;AAKAJ,MAAM,CAACK,IAAP,CAAY,GAAZ,EAAiBC,uBAAjB;AAMAC,MAAM,CAACC,OAAP,GAAkBR,MAAlB,C,CAIA",
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\routes",
      "sourcesContent": [
        "import {Router} from 'express';\r\nconst router = Router();\r\n// import request from 'request';\r\n// const {nuevoSocios} = require('../models/nuevos_socios');\r\nimport {savesocioDB} from '../controllers/controller.socio';\r\n  // const db = require('../../config/dbConnection');\r\n// const validations = require('../../config/validations');\r\nrouter.get('/', (req,res) => {\r\n    res.render('form');\r\n});\r\n\r\n\r\nrouter.post('/', savesocioDB)\r\n  \r\n  \r\n \r\n\r\n\r\nmodule.exports  = router;\r\n\r\n\r\n\r\n// res.redirect('/');"
      ]
    },
    "sourceType": "script",
    "mtime": 1566342185797
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"filename\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\models\\\\Data_register.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\models\\Data_register.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\models\\Data_register.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\models\\Data_register.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\models",
        "sourceFileName": "Data_register.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _dbconfig = require(\"../config/dbconfig\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar DataRegister = _dbconfig.sequelize.define('data_register', {\n  id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  apellido: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  cedula: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  estadocivil: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  direccionresidencial: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  provincia: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  telefonos: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  celular: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  oficinatrabajo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  direcciontrabajo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  telefonotrabajo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  fax: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  puesto: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  fechaingresoempresa: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  sueldo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  email: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  ahorromensual: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  certificadoaportacion: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  valorcertificado: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  nombre2: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  cedula2: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  socio_ID: {\n    type: _sequelize[\"default\"].INTEGER\n  }\n}, {\n  // createdAt: false,\n  updatedAt: false\n});\n\nvar _default = DataRegister;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGFfcmVnaXN0ZXIuanMiXSwibmFtZXMiOlsiRGF0YVJlZ2lzdGVyIiwic2VxdWVsaXplIiwiZGVmaW5lIiwiaWQiLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJub21icmUiLCJURVhUIiwiYXBlbGxpZG8iLCJjZWR1bGEiLCJlc3RhZG9jaXZpbCIsImRpcmVjY2lvbnJlc2lkZW5jaWFsIiwicHJvdmluY2lhIiwidGVsZWZvbm9zIiwiY2VsdWxhciIsIm9maWNpbmF0cmFiYWpvIiwiZGlyZWNjaW9udHJhYmFqbyIsInRlbGVmb25vdHJhYmFqbyIsImZheCIsInB1ZXN0byIsImZlY2hhaW5ncmVzb2VtcHJlc2EiLCJzdWVsZG8iLCJlbWFpbCIsImFob3Jyb21lbnN1YWwiLCJjZXJ0aWZpY2Fkb2Fwb3J0YWNpb24iLCJ2YWxvcmNlcnRpZmljYWRvIiwibm9tYnJlMiIsImNlZHVsYTIiLCJzb2Npb19JRCIsInVwZGF0ZWRBdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBR0MsSUFBTUEsWUFBWSxHQUFHQyxvQkFBVUMsTUFBVixDQUFpQixlQUFqQixFQUFrQztBQUNwREMsRUFBQUEsRUFBRSxFQUFFO0FBQ0FDLElBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BRGhCO0FBRUFDLElBQUFBLFVBQVUsRUFBRTtBQUZaLEdBRGdEO0FBS3BEQyxFQUFBQSxNQUFNLEVBQUU7QUFDSkosSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFEWixHQUw0QztBQVNwREMsRUFBQUEsUUFBUSxFQUFFO0FBQ05OLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFYsR0FUMEM7QUFhcERFLEVBQUFBLE1BQU0sRUFBRTtBQUNKUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURaLEdBYjRDO0FBZ0JwREcsRUFBQUEsV0FBVyxFQUFFO0FBQ1RSLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFAsR0FoQnVDO0FBbUJwREksRUFBQUEsb0JBQW9CLEVBQUU7QUFDbEJULElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBREUsR0FuQjhCO0FBc0JwREssRUFBQUEsU0FBUyxFQUFFO0FBQ1BWLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFQsR0F0QnlDO0FBeUJwRE0sRUFBQUEsU0FBUyxFQUFFO0FBQ1BYLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFQsR0F6QnlDO0FBNEJwRE8sRUFBQUEsT0FBTyxFQUFFO0FBQ0xaLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFgsR0E1QjJDO0FBK0JwRFEsRUFBQUEsY0FBYyxFQUFFO0FBQ1piLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBREosR0EvQm9DO0FBa0NwRFMsRUFBQUEsZ0JBQWdCLEVBQUU7QUFDZGQsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFERixHQWxDa0M7QUFxQ3BEVSxFQUFBQSxlQUFlLEVBQUU7QUFDYmYsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFESCxHQXJDbUM7QUF3Q3BEVyxFQUFBQSxHQUFHLEVBQUU7QUFDRGhCLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRGYsR0F4QytDO0FBMkNwRFksRUFBQUEsTUFBTSxFQUFFO0FBQ0pqQixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURaLEdBM0M0QztBQThDcERhLEVBQUFBLG1CQUFtQixFQUFFO0FBQ2pCbEIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFEQyxHQTlDK0I7QUFpRHBEYyxFQUFBQSxNQUFNLEVBQUU7QUFDSm5CLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFosR0FqRDRDO0FBb0RwRGUsRUFBQUEsS0FBSyxFQUFFO0FBQ0hwQixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURiLEdBcEQ2QztBQXVEcERnQixFQUFBQSxhQUFhLEVBQUU7QUFDWHJCLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBREwsR0F2RHFDO0FBMERwRGlCLEVBQUFBLHFCQUFxQixFQUFFO0FBQ25CdEIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFERyxHQTFENkI7QUE2RHBEa0IsRUFBQUEsZ0JBQWdCLEVBQUU7QUFDZHZCLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBREYsR0E3RGtDO0FBZ0VwRG1CLEVBQUFBLE9BQU8sRUFBRTtBQUNMeEIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFEWCxHQWhFMkM7QUFtRXBEb0IsRUFBQUEsT0FBTyxFQUFFO0FBQ0x6QixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURYLEdBbkUyQztBQXNFcERxQixFQUFBQSxRQUFRLEVBQUU7QUFDTjFCLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRFY7QUF0RTBDLENBQWxDLEVBMkV0QjtBQUNJO0FBQ0F5QixFQUFBQSxTQUFTLEVBQUU7QUFGZixDQTNFc0IsQ0FBckI7O2VBaUZjL0IsWSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHNpbGVudC1zbmFrZTI3XFxEZXNrdG9wXFxyZWdpc3Ryby1hcHAtY2FwdHVyZVxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XHJcbmltcG9ydCB7c2VxdWVsaXplfSBmcm9tICcuLi9jb25maWcvZGJjb25maWcnO1xyXG5cclxuXHJcbiBjb25zdCBEYXRhUmVnaXN0ZXIgPSBzZXF1ZWxpemUuZGVmaW5lKCdkYXRhX3JlZ2lzdGVyJywge1xyXG4gICAgaWQ6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXHJcbiAgICB9LFxyXG4gICAgbm9tYnJlOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcblxyXG4gICAgYXBlbGxpZG86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgICBcclxuICAgIGNlZHVsYToge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgZXN0YWRvY2l2aWw6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGRpcmVjY2lvbnJlc2lkZW5jaWFsOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBwcm92aW5jaWE6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIHRlbGVmb25vczoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgY2VsdWxhcjoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgb2ZpY2luYXRyYWJham86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGRpcmVjY2lvbnRyYWJham86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIHRlbGVmb25vdHJhYmFqbzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgZmF4OiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBwdWVzdG86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGZlY2hhaW5ncmVzb2VtcHJlc2E6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIHN1ZWxkbzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgZW1haWw6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGFob3Jyb21lbnN1YWw6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGNlcnRpZmljYWRvYXBvcnRhY2lvbjoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgdmFsb3JjZXJ0aWZpY2Fkbzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgbm9tYnJlMjoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgY2VkdWxhMjoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgc29jaW9fSUQ6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfVxyXG5cclxufSxcclxue1xyXG4gICAgLy8gY3JlYXRlZEF0OiBmYWxzZSxcclxuICAgIHVwZGF0ZWRBdDogZmFsc2VcclxufVxyXG4pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRGF0YVJlZ2lzdGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Data_register.js"
      ],
      "names": [
        "DataRegister",
        "sequelize",
        "define",
        "id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "nombre",
        "TEXT",
        "apellido",
        "cedula",
        "estadocivil",
        "direccionresidencial",
        "provincia",
        "telefonos",
        "celular",
        "oficinatrabajo",
        "direcciontrabajo",
        "telefonotrabajo",
        "fax",
        "puesto",
        "fechaingresoempresa",
        "sueldo",
        "email",
        "ahorromensual",
        "certificadoaportacion",
        "valorcertificado",
        "nombre2",
        "cedula2",
        "socio_ID",
        "updatedAt"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAGC,IAAMA,YAAY,GAAGC,oBAAUC,MAAV,CAAiB,eAAjB,EAAkC;AACpDC,EAAAA,EAAE,EAAE;AACAC,IAAAA,IAAI,EAAEC,sBAAUC,OADhB;AAEAC,IAAAA,UAAU,EAAE;AAFZ,GADgD;AAKpDC,EAAAA,MAAM,EAAE;AACJJ,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GAL4C;AASpDC,EAAAA,QAAQ,EAAE;AACNN,IAAAA,IAAI,EAAEC,sBAAUI;AADV,GAT0C;AAapDE,EAAAA,MAAM,EAAE;AACJP,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GAb4C;AAgBpDG,EAAAA,WAAW,EAAE;AACTR,IAAAA,IAAI,EAAEC,sBAAUI;AADP,GAhBuC;AAmBpDI,EAAAA,oBAAoB,EAAE;AAClBT,IAAAA,IAAI,EAAEC,sBAAUI;AADE,GAnB8B;AAsBpDK,EAAAA,SAAS,EAAE;AACPV,IAAAA,IAAI,EAAEC,sBAAUI;AADT,GAtByC;AAyBpDM,EAAAA,SAAS,EAAE;AACPX,IAAAA,IAAI,EAAEC,sBAAUI;AADT,GAzByC;AA4BpDO,EAAAA,OAAO,EAAE;AACLZ,IAAAA,IAAI,EAAEC,sBAAUI;AADX,GA5B2C;AA+BpDQ,EAAAA,cAAc,EAAE;AACZb,IAAAA,IAAI,EAAEC,sBAAUI;AADJ,GA/BoC;AAkCpDS,EAAAA,gBAAgB,EAAE;AACdd,IAAAA,IAAI,EAAEC,sBAAUI;AADF,GAlCkC;AAqCpDU,EAAAA,eAAe,EAAE;AACbf,IAAAA,IAAI,EAAEC,sBAAUI;AADH,GArCmC;AAwCpDW,EAAAA,GAAG,EAAE;AACDhB,IAAAA,IAAI,EAAEC,sBAAUI;AADf,GAxC+C;AA2CpDY,EAAAA,MAAM,EAAE;AACJjB,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GA3C4C;AA8CpDa,EAAAA,mBAAmB,EAAE;AACjBlB,IAAAA,IAAI,EAAEC,sBAAUI;AADC,GA9C+B;AAiDpDc,EAAAA,MAAM,EAAE;AACJnB,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GAjD4C;AAoDpDe,EAAAA,KAAK,EAAE;AACHpB,IAAAA,IAAI,EAAEC,sBAAUI;AADb,GApD6C;AAuDpDgB,EAAAA,aAAa,EAAE;AACXrB,IAAAA,IAAI,EAAEC,sBAAUI;AADL,GAvDqC;AA0DpDiB,EAAAA,qBAAqB,EAAE;AACnBtB,IAAAA,IAAI,EAAEC,sBAAUI;AADG,GA1D6B;AA6DpDkB,EAAAA,gBAAgB,EAAE;AACdvB,IAAAA,IAAI,EAAEC,sBAAUI;AADF,GA7DkC;AAgEpDmB,EAAAA,OAAO,EAAE;AACLxB,IAAAA,IAAI,EAAEC,sBAAUI;AADX,GAhE2C;AAmEpDoB,EAAAA,OAAO,EAAE;AACLzB,IAAAA,IAAI,EAAEC,sBAAUI;AADX,GAnE2C;AAsEpDqB,EAAAA,QAAQ,EAAE;AACN1B,IAAAA,IAAI,EAAEC,sBAAUC;AADV;AAtE0C,CAAlC,EA2EtB;AACI;AACAyB,EAAAA,SAAS,EAAE;AAFf,CA3EsB,CAArB;;eAiFc/B,Y",
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../config/dbconfig';\r\n\r\n\r\n const DataRegister = sequelize.define('data_register', {\r\n    id: {\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n    nombre: {\r\n        type: Sequelize.TEXT\r\n    },\r\n\r\n    apellido: {\r\n        type: Sequelize.TEXT\r\n    },\r\n     \r\n    cedula: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    estadocivil: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    direccionresidencial: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    provincia: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    telefonos: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    celular: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    oficinatrabajo: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    direcciontrabajo: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    telefonotrabajo: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    fax: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    puesto: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    fechaingresoempresa: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    sueldo: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    email: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    ahorromensual: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    certificadoaportacion: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    valorcertificado: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    nombre2: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    cedula2: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    socio_ID: {\r\n        type: Sequelize.INTEGER\r\n    }\r\n\r\n},\r\n{\r\n    // createdAt: false,\r\n    updatedAt: false\r\n}\r\n);\r\n\r\nexport default DataRegister;"
      ]
    },
    "sourceType": "script",
    "mtime": 1566340881535
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"filename\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\\\\src\\\\models\\\\Nuevos_socios.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\silent-snake27\\\\Desktop\\\\registro-app-capture\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\models\\Nuevos_socios.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\models\\Nuevos_socios.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\models\\Nuevos_socios.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\models",
        "sourceFileName": "Nuevos_socios.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _dbconfig = require(\"../config/dbconfig\");\n\nvar _Data_register = _interopRequireDefault(require(\"./Data_register\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar nuevoSocios = _dbconfig.sequelize.define('nuevos_socios', {\n  id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  apellido: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  fecha_solicitud: {\n    type: _sequelize[\"default\"].DATE\n  }\n}, {\n  timestamps: false,\n  createdAt: false\n});\n\nnuevoSocios.hasMany(_Data_register[\"default\"], {\n  foreingKey: 'socio_ID',\n  sourceKey: 'id'\n});\n\n_Data_register[\"default\"].belongsTo(nuevoSocios, {\n  foreingKey: 'socio_ID',\n  sourceKey: 'id'\n});\n\nvar _default = nuevoSocios;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk51ZXZvc19zb2Npb3MuanMiXSwibmFtZXMiOlsibnVldm9Tb2Npb3MiLCJzZXF1ZWxpemUiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJTZXF1ZWxpemUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsIm5vbWJyZSIsIlRFWFQiLCJhcGVsbGlkbyIsImZlY2hhX3NvbGljaXR1ZCIsIkRBVEUiLCJ0aW1lc3RhbXBzIiwiY3JlYXRlZEF0IiwiaGFzTWFueSIsIkRhdGFSZWdpc3RlciIsImZvcmVpbmdLZXkiLCJzb3VyY2VLZXkiLCJiZWxvbmdzVG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7OztBQUVBLElBQU1BLFdBQVcsR0FBR0Msb0JBQVVDLE1BQVYsQ0FBaUIsZUFBakIsRUFBa0M7QUFDbERDLEVBQUFBLEVBQUUsRUFBRTtBQUNBQyxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQURoQjtBQUVBQyxJQUFBQSxVQUFVLEVBQUU7QUFGWixHQUQ4QztBQUtsREMsRUFBQUEsTUFBTSxFQUFFO0FBQ0pKLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFosR0FMMEM7QUFRbERDLEVBQUFBLFFBQVEsRUFBRTtBQUNOTixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURWLEdBUndDO0FBV2xERSxFQUFBQSxlQUFlLEVBQUU7QUFDYlAsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVU87QUFESDtBQVhpQyxDQUFsQyxFQWNoQjtBQUNBQyxFQUFBQSxVQUFVLEVBQUUsS0FEWjtBQUVBQyxFQUFBQSxTQUFTLEVBQUU7QUFGWCxDQWRnQixDQUFwQjs7QUFtQkFkLFdBQVcsQ0FBQ2UsT0FBWixDQUFvQkMseUJBQXBCLEVBQWtDO0FBQUNDLEVBQUFBLFVBQVUsRUFBRSxVQUFiO0FBQXlCQyxFQUFBQSxTQUFTLEVBQUU7QUFBcEMsQ0FBbEM7O0FBQ0FGLDBCQUFhRyxTQUFiLENBQXVCbkIsV0FBdkIsRUFBb0M7QUFBQ2lCLEVBQUFBLFVBQVUsRUFBRSxVQUFiO0FBQXlCQyxFQUFBQSxTQUFTLEVBQUU7QUFBcEMsQ0FBcEM7O2VBRWVsQixXIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcc2lsZW50LXNuYWtlMjdcXERlc2t0b3BcXHJlZ2lzdHJvLWFwcC1jYXB0dXJlXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuaW1wb3J0IHtzZXF1ZWxpemV9IGZyb20gJy4uL2NvbmZpZy9kYmNvbmZpZyc7XHJcblxyXG5pbXBvcnQgRGF0YVJlZ2lzdGVyIGZyb20gJy4vRGF0YV9yZWdpc3Rlcic7IFxyXG5cclxuY29uc3QgbnVldm9Tb2Npb3MgPSBzZXF1ZWxpemUuZGVmaW5lKCdudWV2b3Nfc29jaW9zJywge1xyXG4gICAgaWQ6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXHJcbiAgICB9LFxyXG4gICAgbm9tYnJlOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBhcGVsbGlkbzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgZmVjaGFfc29saWNpdHVkOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLkRBVEVcclxuICAgIH1cclxufSwgIHtcclxuICAgIHRpbWVzdGFtcHM6IGZhbHNlLFxyXG4gICAgY3JlYXRlZEF0OiBmYWxzZVxyXG59KTtcclxuXHJcbm51ZXZvU29jaW9zLmhhc01hbnkoRGF0YVJlZ2lzdGVyLCB7Zm9yZWluZ0tleTogJ3NvY2lvX0lEJywgc291cmNlS2V5OiAnaWQnfSk7XHJcbkRhdGFSZWdpc3Rlci5iZWxvbmdzVG8obnVldm9Tb2Npb3MsIHtmb3JlaW5nS2V5OiAnc29jaW9fSUQnLCBzb3VyY2VLZXk6ICdpZCd9KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG51ZXZvU29jaW9zOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Nuevos_socios.js"
      ],
      "names": [
        "nuevoSocios",
        "sequelize",
        "define",
        "id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "nombre",
        "TEXT",
        "apellido",
        "fecha_solicitud",
        "DATE",
        "timestamps",
        "createdAt",
        "hasMany",
        "DataRegister",
        "foreingKey",
        "sourceKey",
        "belongsTo"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;;;AAEA,IAAMA,WAAW,GAAGC,oBAAUC,MAAV,CAAiB,eAAjB,EAAkC;AAClDC,EAAAA,EAAE,EAAE;AACAC,IAAAA,IAAI,EAAEC,sBAAUC,OADhB;AAEAC,IAAAA,UAAU,EAAE;AAFZ,GAD8C;AAKlDC,EAAAA,MAAM,EAAE;AACJJ,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GAL0C;AAQlDC,EAAAA,QAAQ,EAAE;AACNN,IAAAA,IAAI,EAAEC,sBAAUI;AADV,GARwC;AAWlDE,EAAAA,eAAe,EAAE;AACbP,IAAAA,IAAI,EAAEC,sBAAUO;AADH;AAXiC,CAAlC,EAchB;AACAC,EAAAA,UAAU,EAAE,KADZ;AAEAC,EAAAA,SAAS,EAAE;AAFX,CAdgB,CAApB;;AAmBAd,WAAW,CAACe,OAAZ,CAAoBC,yBAApB,EAAkC;AAACC,EAAAA,UAAU,EAAE,UAAb;AAAyBC,EAAAA,SAAS,EAAE;AAApC,CAAlC;;AACAF,0BAAaG,SAAb,CAAuBnB,WAAvB,EAAoC;AAACiB,EAAAA,UAAU,EAAE,UAAb;AAAyBC,EAAAA,SAAS,EAAE;AAApC,CAApC;;eAEelB,W",
      "sourceRoot": "C:\\Users\\silent-snake27\\Desktop\\registro-app-capture\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../config/dbconfig';\r\n\r\nimport DataRegister from './Data_register'; \r\n\r\nconst nuevoSocios = sequelize.define('nuevos_socios', {\r\n    id: {\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n    nombre: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    apellido: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    fecha_solicitud: {\r\n        type: Sequelize.DATE\r\n    }\r\n},  {\r\n    timestamps: false,\r\n    createdAt: false\r\n});\r\n\r\nnuevoSocios.hasMany(DataRegister, {foreingKey: 'socio_ID', sourceKey: 'id'});\r\nDataRegister.belongsTo(nuevoSocios, {foreingKey: 'socio_ID', sourceKey: 'id'});\r\n\r\nexport default nuevoSocios;"
      ]
    },
    "sourceType": "script",
    "mtime": 1566332791210
  }
}